{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin/admin.component.ts","webpack:///src/app/admin/admin/admin.component.html","webpack:///src/app/admin/benefice/benefice.component.ts","webpack:///src/app/admin/benefice/benefice.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/client/client/client.component.ts","webpack:///src/app/client/client/client.component.html","webpack:///src/app/client/commande/commande.component.ts","webpack:///src/app/client/commande/commande.component.html","webpack:///src/app/client/livrer/livrer.component.ts","webpack:///src/app/client/livrer/livrer.component.html","webpack:///src/app/entities/commande/commande.model.ts","webpack:///src/app/entities/commande/commande.service.ts","webpack:///src/app/entities/plat/plat.model.ts","webpack:///src/app/entities/plat/plat.service.ts","webpack:///src/app/entities/product/product.model.ts","webpack:///src/app/entities/product/product.service.ts","webpack:///src/app/entities/user/user.model.ts","webpack:///src/app/entities/user/user.service.ts","webpack:///src/app/inscription/inscription.component.ts","webpack:///src/app/inscription/inscription.component.html","webpack:///src/app/livreur/livreur.component.ts","webpack:///src/app/livreur/livreur.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/product/product-create/product-create.component.ts","webpack:///src/app/product/product-create/product-create.component.html","webpack:///src/app/product/product-list/product-list.component.ts","webpack:///src/app/product/product-list/product-list.component.html","webpack:///src/app/restaurant/benefice/benefice.component.ts","webpack:///src/app/restaurant/benefice/benefice.component.html","webpack:///src/app/restaurant/commande/commande.component.ts","webpack:///src/app/restaurant/commande/commande.component.html","webpack:///src/app/restaurant/liste-plat/restaurant.component.ts","webpack:///src/app/restaurant/liste-plat/restaurant.component.html","webpack:///src/app/restaurant/new-plat/new-plat.component.ts","webpack:///src/app/restaurant/new-plat/new-plat.component.html","webpack:///src/app/shared/status.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminComponent","activatedRoute","user","router","commandeserv","commandes","livreurs","id_user","email","nom","error","livreur","required","createdCommande","$","click","toggleClass","item","JSON","parse","localStorage","getItem","navigate","deconnexion","loadAll","commande","value","confirm","assigner","_id","result","selector","templateUrl","styleUrls","BeneficeRestoComponent","platserv","idResto","quantite","plat","beneficeResto","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","statusService","title","status","createdProduct","getStatus","AppModule","declarations","providers","bootstrap","ClientComponent","resto","CommandeComponent","plats","prixVente","prixRevient","Commander","undefined","emit","snapshot","params","LivrerComponent","CommandeClient","Commande","idClient","Client","idPlat","prixUnitaire","livrer","date","CommandeService","http","CommandesUrl","get","toPromise","response","json","post","message","statusText","console","providedIn","Plat","image","visible","PlatService","PlatsUrl","Product","name","brand","ProductService","productsUrl","product","User","adresse","valide","profil","mdp","LoginUser","UserService","UsersUrl","token","delete_token","removeItem","window","location","reload","InscriptionComponent","formBuilder","succes","erreur","cmdp","createdUser","initForm","UserForm","mail","create","sendMail","onSubmit","LivreurComponent","livraison","LoginComponent","validercompte","login","log","setItem","stringify","navigateByUrl","ProductCreateComponent","productService","productForm","ProductListComponent","products","productToDisplay","push","BeneficeComponent","benefice","CommandeRestaurantComponent","CommandeResto","RestaurantComponent","NewPlatComponent","createdPlat","PlatForm","StatusService","statusUrl","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Commande, ICommande } from 'src/app/entities/commande/commande.model';\r\nimport { CommandeService } from 'src/app/entities/commande/commande.service';\r\nimport { IPlat,Plat } from 'src/app/entities/plat/plat.model';\r\nimport { PlatService } from 'src/app/entities/plat/plat.service';\r\nimport { IUser } from 'src/app/entities/user/user.model';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  commandes: Array<ICommande> = [];\r\n  livreurs: Array<IUser> = [];\r\n  id_user:string='';\r\n  email:string='';\r\n  nom:string='';\r\n  error: boolean = false;\r\n  livreur = new FormControl(Validators.required);\r\n\r\n  @Output() createdCommande = new EventEmitter<ICommande>();\r\n  \r\n  constructor(private activatedRoute:ActivatedRoute, private user:UserService, private router:Router,private commandeserv:CommandeService) { }\r\n\r\n  ngOnInit(): void {\r\n    $('.menu-toggle').click(function(){\r\n      $('.menu-toggle').toggleClass('active');\r\n      $('nav').toggleClass('active');\r\n    });\r\n    let item= JSON.parse(localStorage.getItem(\"token_admin\"));\r\n    if (!item) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      if (item[\"profil\"]!=\"admin\") {\r\n        this.user.deconnexion(\"token_admin\");\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.id_user=item[\"id_user\"];\r\n        this.email=item[\"email\"];\r\n        this.nom=item[\"nom\"];\r\n      }\r\n    }\r\n    this.loadAll();\r\n  }\r\n  onsubmit(commande:Commande){\r\n    if(this.livreur.value!=\" \"){\r\n      if(confirm(\"Assigner ce livreur pour ce commande\")==true){\r\n        this.commandeserv.assigner(commande._id,this.livreur.value);\r\n      }else{}\r\n    }\r\n  }\r\n  private loadAll() {\r\n    this.commandeserv\r\n      .commande()\r\n      .then((result: Array<ICommande>) => {\r\n        this.commandes = result;\r\n      });\r\n    this.user\r\n      .livreur()\r\n      .then((result: Array<IUser>) => {\r\n        this.livreurs = result;\r\n      });\r\n  }\r\n  deconnexion(){\r\n    this.user.deconnexion(\"token_admin\");\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Commande</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"admin\" class=\"logo\">Admin</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a class=\"focus\" href=\"admin\">Commandes</a></li>\r\n                <li class=\"mid\"><a href=\"admin/resto\">Restaurant</a></li>\r\n                <li class=\"mid\"><a href=\"admin/livreur\">Livreur</a></li>\r\n                <li class=\"mid\"><a href=\"admin/benefice\">Benefice</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <table class=\"content-table\">\r\n        <thead>\r\n            <tr>\r\n              <th>Plat</th>\r\n              <th>quantite</th>\r\n              <th>Prix</th>\r\n              <th>Client</th>\r\n              <th>livreur</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tr *ngFor=\"let commande of commandes\">\r\n                  <td>{{ commande.nom }}</td>\r\n                  <td>{{ commande.quantite }}</td>\r\n                  <td>{{ commande.prixUnitaire*commande.quantite }}</td>\r\n                  <td>{{ commande.Client }}</td>\r\n                <td>\r\n                    <select [formControl]=\"livreur\">\r\n                        <option *ngFor=\"let livreur of livreurs\" [value]=\"livreur._id\">{{ livreur.nom }}</option>\r\n                      </select>\r\n                </td>\r\n                <td><a (click)=\"onsubmit(commande)\">Assigner</a></td>\r\n            </tr>\r\n        </tbody>\r\n        </table>\r\n    \r\n    <img class=\"footer\">\r\n    \r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n    <script type=\"text/javascript \">\r\n        $(document).ready(function($) {\r\n            $('.menu-toggle').click(function() {\r\n                $('.menu-toggle').toggleClass('active');\r\n                $('nav').toggleClass('active');\r\n            });\r\n        });\r\n    </script>\r\n</body>\r\n\r\n</html>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Commande, ICommande } from 'src/app/entities/commande/commande.model';\r\nimport { CommandeService } from 'src/app/entities/commande/commande.service';\r\nimport { IPlat,Plat } from 'src/app/entities/plat/plat.model';\r\nimport { PlatService } from 'src/app/entities/plat/plat.service';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-benefice',\r\n  templateUrl: './benefice.component.html',\r\n  styleUrls: ['./benefice.component.css']\r\n})\r\nexport class BeneficeRestoComponent implements OnInit {\r\n\r\n  commandes: Array<ICommande> = [];\r\n  idResto:string=\"\";\r\n  id_user:string='';\r\n  email:string='';\r\n  nom:string='';\r\n  error: boolean = false;\r\n  quantite = new FormControl(Validators.required);\r\n\r\n  @Output() createdCommande = new EventEmitter<ICommande>();\r\n  \r\n  constructor(private platserv:PlatService,private activatedRoute:ActivatedRoute, private user:UserService, private router:Router,private commandeserv:CommandeService) { }\r\n\r\n  ngOnInit(): void {\r\n    $('.menu-toggle').click(function(){\r\n      $('.menu-toggle').toggleClass('active');\r\n      $('nav').toggleClass('active');\r\n    });\r\n    let item= JSON.parse(localStorage.getItem(\"token_admin\"));\r\n    if (!item) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      if (item[\"profil\"]!=\"admin\") {\r\n        this.user.deconnexion(\"token_admin\");\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.id_user=item[\"id_user\"];\r\n        this.email=item[\"email\"];\r\n        this.nom=item[\"nom\"];\r\n      }\r\n    }\r\n    this.loadAll();\r\n  }\r\n  onsubmit(plat:Plat){\r\n    \r\n  }\r\n  private loadAll() {\r\n    this.commandeserv\r\n      .beneficeResto()\r\n      .then((result: Array<ICommande>) => {\r\n        this.commandes = result;\r\n      });\r\n  }\r\n  deconnexion(){\r\n    this.user.deconnexion(\"token_admin\");\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Livreur</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"admin\" class=\"logo\">Admin</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a href=\"admin\">Commandes</a></li>\r\n                <li class=\"mid\"><a href=\"admin/resto\">Restaurant</a></li>\r\n                <li class=\"mid\"><a href=\"admin/livreur\">Livreur</a></li>\r\n                <li class=\"mid\"><a class=\"focus\" href=\"admin/benefice\">Benefice</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <table class=\"content-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Restaurant</th>\r\n            <th>Quantite vendu</th>\r\n            <th>Benefice</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let commande of commandes\">\r\n                <td>{{ commande._id }}</td>\r\n                <td>{{ commande.quantite}}</td>\r\n                <td>{{ (commande.quantite*commande.totalPrix)-(commande.quantite*commande.totalRevient)}}</td>\r\n            </tr>\r\n        </tbody>\r\n        </table>\r\n    \r\n    <img class=\"footer\">\r\n    \r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n</body>\r\n\r\n</html>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminComponent } from './admin/admin/admin.component';\r\nimport { BeneficeRestoComponent } from './admin/benefice/benefice.component';\r\nimport { ClientComponent } from './client/client/client.component';\r\nimport { CommandeComponent } from './client/commande/commande.component';\r\nimport { LivrerComponent } from './client/livrer/livrer.component';\r\nimport { InscriptionComponent } from './inscription/inscription.component';\r\nimport { LivreurComponent } from './livreur/livreur.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { BeneficeComponent } from './restaurant/benefice/benefice.component';\r\nimport { CommandeRestaurantComponent } from './restaurant/commande/commande.component';\r\nimport { RestaurantComponent } from './restaurant/liste-plat/restaurant.component';\r\nimport { NewPlatComponent } from './restaurant/new-plat/new-plat.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  {path:'login/:email',component:LoginComponent},\r\n  {path:'login',component:LoginComponent},\r\n  {path:'restaurant',component:RestaurantComponent},\r\n  {path:'client',component:ClientComponent},\r\n  {path:'commande/:id',component:CommandeComponent},\r\n  {path:'admin',component:AdminComponent},\r\n  {path:'livreur',component:LivreurComponent},\r\n  {path:'plat/nouveau',component:NewPlatComponent},\r\n  {path:'inscription',component:InscriptionComponent},\r\n  {path:'commande-en-cours',component:LivrerComponent},\r\n  {path:'restaurant/commande',component:CommandeRestaurantComponent},\r\n  {path:'restaurant/benefice',component:BeneficeComponent},\r\n  {path:'admin/benefice',component:BeneficeRestoComponent}\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { StatusService } from './shared/status.service';\nimport { IProduct } from './entities/product/product.model';\nimport { isPromise } from '@angular/compiler/src/util';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'node-express-angular';\n  status = 'DOWN';\n  createdProduct: IProduct = null;\n\n  constructor(protected statusService: StatusService) { }\n\n  // Get the server status when starting the view.\n  ngOnInit() {\n    this.statusService\n      .getStatus()\n      .then((result: any) => {\n        this.status = result.status;\n      });\n  }\n\n  // Get the new product created.\n  onCreatedProduct(createdProduct: IProduct) {\n    this.createdProduct = createdProduct;\n  }\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, Compiler } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpModule } from '@angular/http';\r\nimport { ProductListComponent } from './product/product-list/product-list.component';\r\nimport { ProductCreateComponent } from './product/product-create/product-create.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RestaurantComponent } from './restaurant/liste-plat/restaurant.component';\r\nimport { ClientComponent } from './client/client/client.component';\r\nimport { InscriptionComponent } from './inscription/inscription.component';\r\nimport { NewPlatComponent } from './restaurant/new-plat/new-plat.component';\r\nimport { AdminComponent } from './admin/admin/admin.component';\r\nimport { LivreurComponent } from './livreur/livreur.component';\r\nimport { CommandeComponent } from './client/commande/commande.component';\r\nimport { CommandeRestaurantComponent } from './restaurant/commande/commande.component';\r\nimport { LivrerComponent } from './client/livrer/livrer.component';\r\nimport { BeneficeComponent } from './restaurant/benefice/benefice.component';\r\nimport { BeneficeRestoComponent } from './admin/benefice/benefice.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProductListComponent,\r\n    ProductCreateComponent,\r\n    LoginComponent,\r\n    RestaurantComponent,\r\n    ClientComponent,\r\n    InscriptionComponent,\r\n    NewPlatComponent,\r\n    AdminComponent,\r\n    LivreurComponent,\r\n    CommandeComponent,\r\n    CommandeRestaurantComponent,\r\n    LivrerComponent,\r\n    BeneficeComponent,\r\n    BeneficeRestoComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IUser } from 'src/app/entities/user/user.model';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-client',\r\n  templateUrl: './client.component.html',\r\n  styleUrls: ['./client.component.css']\r\n})\r\nexport class ClientComponent implements OnInit {\r\n  resto:Array<IUser> = [];\r\n  id_user:string='';\r\n  email:string='';\r\n  nom:string='';\r\n  constructor(private router:Router, private user:UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    $('.menu-toggle').click(function(){\r\n      $('.menu-toggle').toggleClass('active');\r\n      $('nav').toggleClass('active');\r\n    });\r\n    let item= JSON.parse(localStorage.getItem(\"token_client\"));\r\n    if (!item) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      if (item[\"profil\"]!=\"client\") {\r\n        this.user.deconnexion(\"token_client\");\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.id_user=item[\"id_user\"];\r\n        this.email=item[\"email\"];\r\n        this.nom=item[\"nom\"];\r\n      }\r\n    }\r\n    this.loadAll();\r\n  }\r\n  private loadAll() {\r\n    this.user\r\n      .resto()\r\n      .then((result: Array<IUser>) => {\r\n        this.resto = result;\r\n      });\r\n  }\r\n  deconnexion(){\r\n    this.user.deconnexion(\"token_client\");\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Liste Restaurant</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"client\" class=\"logo\">Client</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a class=\"focus\" href=\"client\">Commander</a></li>\r\n                <li class=\"mid\"><a href=\"commande-en-cours\">Commande en cours</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <div class=\"titre\">\r\n        <img class=\"header\" alt=\"header\" src=\"assets/pictogrammes/elements/resto.webp\">\r\n        <h1 class=\"titre1\">E-kaly</h1>\r\n        <h1 class=\"we_care\">Satisfait ou rembourser</h1>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <div class=\"half clearfix\">\r\n        <div class=\"div\" *ngFor=\"let rest of resto\">\r\n            <div class=\"plat\">\r\n                <a href=\"commande/{{ rest._id }}\"><img class=\"header \" alt=\"header \" src=\"assets/pictogrammes/elements/resto.webp \"></a>\r\n            </div>\r\n            <h1>{{ rest.nom }}</h1>\r\n        </div>\r\n    </div>\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n    <script type=\"text/javascript \">\r\n        $(document).ready(function($) {\r\n            $('.menu-toggle').click(function() {\r\n                $('.menu-toggle').toggleClass('active');\r\n                $('nav').toggleClass('active');\r\n            });\r\n        });\r\n    </script>\r\n</body>\r\n\r\n</html>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Commande, ICommande } from 'src/app/entities/commande/commande.model';\r\nimport { CommandeService } from 'src/app/entities/commande/commande.service';\r\nimport { IPlat,Plat } from 'src/app/entities/plat/plat.model';\r\nimport { PlatService } from 'src/app/entities/plat/plat.service';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-commande',\r\n  templateUrl: './commande.component.html',\r\n  styleUrls: ['./commande.component.css']\r\n})\r\nexport class CommandeComponent implements OnInit {\r\n  plats: Array<IPlat> = [];\r\n  idResto:string=\"\";\r\n  id_user:string='';\r\n  email:string='';\r\n  nom:string='';\r\n  error: boolean = false;\r\n  quantite = new FormControl(Validators.required);\r\n\r\n  @Output() createdCommande = new EventEmitter<ICommande>();\r\n  \r\n  constructor(private platserv:PlatService,private activatedRoute:ActivatedRoute, private user:UserService, private router:Router,private commandeserv:CommandeService) { }\r\n\r\n  ngOnInit(): void {\r\n    $('.menu-toggle').click(function(){\r\n      $('.menu-toggle').toggleClass('active');\r\n      $('nav').toggleClass('active');\r\n    });\r\n    let item= JSON.parse(localStorage.getItem(\"token_client\"));\r\n    if (!item) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      if (item[\"profil\"]!=\"client\") {\r\n        this.user.deconnexion(\"token_client\");\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.id_user=item[\"id_user\"];\r\n        this.email=item[\"email\"];\r\n        this.nom=item[\"nom\"];\r\n      }\r\n    }\r\n    this.loadAll();\r\n  }\r\n  onsubmit(plat:Plat){\r\n    const commande = new Commande(this.id_user,this.email, plat._id, plat.idResto, plat.nom , this.quantite.value,plat.prixVente, plat.prixRevient, false, null, null);\r\n    if(this.quantite.value>0){\r\n      if(confirm(\"Voulez vous vraiment commander \"+this.quantite.value+\" \"+plat.nom+\"?\")==true){\r\n        this.commandeserv.Commander(commande).then((result: ICommande) => {\r\n          if (result === undefined) {\r\n            this.error = true;\r\n          } else {\r\n            this.error = false;\r\n            this.createdCommande.emit(result);\r\n          }\r\n        });\r\n      }else{}\r\n    }\r\n  }\r\n  private loadAll() {\r\n    this.idResto=this.activatedRoute.snapshot.params[\"id\"];\r\n    this.platserv\r\n      .plat(this.idResto)\r\n      .then((result: Array<IPlat>) => {\r\n        this.plats = result;\r\n      });\r\n  }\r\n  deconnexion(){\r\n    this.user.deconnexion(\"token_client\");\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Commande</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"client\" class=\"logo\">Client</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a class=\"focus\" href=\"client\">Commander</a></li>\r\n                <li class=\"mid\"><a href=\"commande-en-cours\">Commande en cours</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <table class=\"content-table\">\r\n        <thead>\r\n          <tr>\r\n              <th>Nom</th>\r\n              <th>Prix</th>\r\n              <th>Quantite</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let plat of plats\">\r\n                <td>{{ plat.nom }}</td>\r\n                <td>{{ plat.prixVente }}</td>\r\n                <td><input id=\"quantite\" type=\"number\" [formControl]=\"quantite\" placeholder=0/></td>\r\n                <td><a (click)=\"onsubmit(plat)\">Commander</a></td>\r\n            </tr>\r\n        </tbody>\r\n        </table>\r\n    \r\n    <img class=\"footer\">\r\n    \r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n    <script type=\"text/javascript \">\r\n        $(document).ready(function($) {\r\n            $('.menu-toggle').click(function() {\r\n                $('.menu-toggle').toggleClass('active');\r\n                $('nav').toggleClass('active');\r\n            });\r\n        });\r\n    </script>\r\n</body>\r\n\r\n</html>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ICommande } from 'src/app/entities/commande/commande.model';\nimport { CommandeService } from 'src/app/entities/commande/commande.service';\nimport { UserService } from 'src/app/entities/user/user.service';\n\n@Component({\n  selector: 'app-livrer',\n  templateUrl: './livrer.component.html',\n  styleUrls: ['./livrer.component.css']\n})\nexport class LivrerComponent implements OnInit {\n  commandes: Array<ICommande> = [];\n  id_user:string='';\n  email:string='';\n  nom:string='';\n  error: boolean = false;\n  constructor(private activatedRoute:ActivatedRoute, private user:UserService, private router:Router,private commande : CommandeService) { }\n\n  ngOnInit(): void {\n    $('.menu-toggle').click(function(){\n      $('.menu-toggle').toggleClass('active');\n      $('nav').toggleClass('active');\n    });\n    let item= JSON.parse(localStorage.getItem(\"token_client\"));\n    if (!item) {\n      this.router.navigate(['/login']);\n    } else {\n      if (item[\"profil\"]!=\"client\") {\n        this.user.deconnexion(\"token_client\");\n        this.router.navigate(['/login']);\n      } else {\n        this.id_user=item[\"id_user\"];\n        this.email=item[\"email\"];\n        this.nom=item[\"nom\"];\n      }\n    }\n    this.loadAll();\n  }\n  private loadAll() {\n    this.commande\n      .CommandeClient(this.id_user)\n      .then((result: Array<ICommande>) => {\n        this.commandes = result;\n      });\n  }\n  deconnexion(){\n    this.user.deconnexion(\"token_client\");\n  }\n}\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Commande en cours</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"client\" class=\"logo\">Client</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a href=\"client\">Commander</a></li>\r\n                <li class=\"mid\"><a class=\"focus\" href=\"commande-en-cours\">Commande en cours</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <table class=\"content-table\">\r\n        <thead>\r\n          <tr>\r\n              <th>Plat</th>\r\n              <th>quantite</th>\r\n              <th>Prix</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let commande of commandes\">\r\n                <td>{{ commande.nom }}</td>\r\n                <td>{{ commande.quantite }}</td>\r\n                <td>{{ commande.prixUnitaire*commande.quantite }}</td>\r\n            </tr>\r\n        </tbody>\r\n        </table>\r\n    \r\n    <img class=\"footer\">\r\n    \r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n    <script type=\"text/javascript \">\r\n        $(document).ready(function($) {\r\n            $('.menu-toggle').click(function() {\r\n                $('.menu-toggle').toggleClass('active');\r\n                $('nav').toggleClass('active');\r\n            });\r\n        });\r\n    </script>\r\n</body>\r\n\r\n</html>","export interface ICommande {\r\n  _id?: string;\r\n  idClient : string;\r\n  Client : string;\r\n  idPlat : string;\r\n  idResto : string;\r\n  nom :string;\r\n  quantite : number;\r\n  prixUnitaire : number;\r\n  prixRevient : number;\r\n  livrer: boolean;\r\n  livreur: string;\r\n  date : Date;\r\n}\r\n\r\nexport class Commande implements ICommande {\r\n  constructor(\r\n    public idClient : string,\r\n    public Client : string,\r\n    public idPlat : string,\r\n    public idResto : string,\r\n    public nom :string,\r\n    public quantite : number,\r\n    public prixUnitaire : number,\r\n    public prixRevient : number,\r\n    public livrer: boolean,\r\n    public livreur: string,\r\n    public date : Date,\r\n    public _id?: string\r\n  ) {\r\n    this._id = _id ? _id : null;\r\n    this.idClient = idClient;\r\n    this.Client = Client;\r\n    this.idPlat = idPlat;\r\n    this.idResto = idResto;\r\n    this.nom = nom;\r\n    this.quantite =quantite;\r\n    this.prixUnitaire =prixUnitaire;\r\n    this.prixRevient =prixRevient;\r\n    this.livrer =livrer;\r\n    this.livreur =livreur;\r\n    this.date =date;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { ICommande, Commande } from './commande.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommandeService {\r\n  private CommandesUrl = '/api/commande';\r\n\r\n  constructor(private http: Http) { }\r\n  //get resto\r\n  commande(): Promise<Array<ICommande>> {\r\n    return this.http.get(`${this.CommandesUrl}/all`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n\r\n  //benefice par plat\r\n  benefice(id:string): Promise<Array<ICommande>> {\r\n    return this.http.get(`${this.CommandesUrl}/benefice/${id}`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n\r\n  //benefice par resto\r\n  beneficeResto(): Promise<Array<ICommande>> {\r\n    return this.http.get(`${this.CommandesUrl}/beneficeResto`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n\r\n  //Commander\r\n  Commander(commande: Commande): Promise<ICommande> {\r\n    return this.http.post(this.CommandesUrl, commande)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n  // Get Commandes by idClient\r\n  CommandeClient(id:string): Promise<Array<ICommande>> {\r\n    return this.http.get(`${this.CommandesUrl}/${id}`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n  // Get Commandes by Resto\r\n  CommandeResto(id:string): Promise<Array<ICommande>> {\r\n    return this.http.get(`api/restaurant/commande/${id}`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n  // Get Commandes a livrer\r\n  livraison(livreur:string): Promise<Array<ICommande>> {\r\n    return this.http.get(`${this.CommandesUrl}/livrer/${livreur}`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n\r\n  // Livrer\r\n  livrer(id:string): Promise<Array<ICommande>> {\r\n    return this.http.get(`api/livrer/${id}`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n\r\n  // Assigner livreur\r\n  assigner(id:string, livreur:string): Promise<Array<ICommande>> {\r\n    return this.http.get(`${this.CommandesUrl}/assigner/${id}/${livreur}`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n\r\n  private error(error: any) {\r\n      let message = (error.message) ? error.message :\r\n          error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n      console.error(message);\r\n  }\r\n}\r\n","export interface IPlat {\r\n  _id?: string;\r\n  image: string;\r\n  nom : string;\r\n  prixRevient : number;\r\n  prixVente : number;\r\n  visible : boolean;\r\n  idResto : string;\r\n}\r\n\r\nexport class Plat implements IPlat {\r\n  constructor(\r\n    public image: string,\r\n    public nom: string,\r\n    public prixRevient : number,\r\n    public prixVente : number,\r\n    public visible : boolean,\r\n    public idResto : string,\r\n    public _id?: string\r\n  ) {\r\n    this._id = _id ? _id : null;\r\n    this.image = image;\r\n    this.nom = nom;\r\n    this.prixRevient =prixRevient;\r\n    this.prixVente =prixVente;\r\n    this.visible = visible;\r\n    this.idResto = idResto;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { IPlat, Plat } from './plat.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlatService {\r\n  private PlatsUrl = '/api/plat';\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  // Get Plats by idResto\r\n  plat(id:string): Promise<Array<IPlat>> {\r\n      return this.http.get(`${this.PlatsUrl}/${id}`)\r\n          .toPromise()\r\n          .then(response => response.json())\r\n          .catch(this.error);\r\n  }\r\n\r\n  // Create Plat\r\n  create(Plat: Plat): Promise<IPlat> {\r\n      return this.http.post(this.PlatsUrl, Plat)\r\n          .toPromise()\r\n          .then(response => response.json())\r\n          .catch(this.error);\r\n  }\r\n\r\n  // Delete a Plat\r\n  delete(id: string): Promise<any> {\r\n      return this.http.delete(`${this.PlatsUrl}/${id}`)\r\n          .toPromise()\r\n          .then(response => response.json())\r\n          .catch(this.error);\r\n  }\r\n\r\n  //send Mail\r\n  sendMail(Plat: Plat): Promise<IPlat> {\r\n      return this.http.post(`${this.PlatsUrl}/sendmail`, Plat)\r\n          .toPromise()\r\n          .then(response => response.json())\r\n          .catch(this.error);\r\n  }\r\n\r\n  // Error handling\r\n  private error(error: any) {\r\n      let message = (error.message) ? error.message :\r\n          error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n      console.error(message);\r\n  }\r\n}\r\n","export interface IProduct {\n  _id?: string;\n  name: string;\n  brand: string;\n}\n\nexport class Product implements IProduct {\n  constructor(\n    public name: string,\n    public brand: string,\n    public _id?: string\n  ) {\n    this._id = _id ? _id : null;\n    this.name = name;\n    this.brand = brand;\n  }\n}","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { IProduct, Product } from './product.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProductService {\n    private productsUrl = '/api/products';\n\n    constructor(private http: Http) { }\n\n    // Get products\n    get(): Promise<Array<IProduct>> {\n        return this.http.get(this.productsUrl)\n            .toPromise()\n            .then(response => response.json())\n            .catch(this.error);\n    }\n\n    // Create product\n    create(product: Product): Promise<IProduct> {\n        return this.http.post(this.productsUrl, product)\n            .toPromise()\n            .then(response => response.json())\n            .catch(this.error);\n    }\n\n    // Delete a product\n    delete(id: string): Promise<any> {\n        return this.http.delete(`${this.productsUrl}/${id}`)\n            .toPromise()\n            .then(response => response.json())\n            .catch(this.error);\n    }\n\n    // Error handling\n    private error(error: any) {\n        let message = (error.message) ? error.message :\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        console.error(message);\n    }\n}\n","export interface IUser {\r\n  _id?: string;\r\n  email: string;\r\n  nom : string;\r\n  adresse:string;\r\n  valide : boolean;\r\n  profil : string;\r\n  mdp : string;\r\n}\r\n\r\nexport class User implements IUser {\r\n  constructor(\r\n    public email: string,\r\n    public nom: string,\r\n    public adresse:string,\r\n    public valide : boolean,\r\n    public profil : string,\r\n    public mdp : string,\r\n    public _id?: string\r\n  ) {\r\n    this._id = _id ? _id : null;\r\n    this.email = email;\r\n    this.nom = nom;\r\n    this.adresse = adresse;\r\n    this.valide =valide;\r\n    this.profil =profil;\r\n    this.mdp = mdp;\r\n  }\r\n}\r\n\r\nexport interface LUser {\r\n  email: string;\r\n  mdp : string;\r\n}\r\n\r\nexport class LoginUser implements LUser {\r\n  constructor(\r\n    public email: string,\r\n    public mdp : string,\r\n  ) {\r\n    this.email = email;\r\n    this.mdp = mdp;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { IUser, LoginUser, User } from './user.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n    private UsersUrl = '/api/user';\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    // Get Users\r\n    get(): Promise<Array<IUser>> {\r\n        return this.http.get(this.UsersUrl)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    //get resto\r\n    resto(): Promise<Array<IUser>> {\r\n        return this.http.get(`${this.UsersUrl}/resto`)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    //get livreur\r\n    livreur(): Promise<Array<IUser>> {\r\n        return this.http.get(`${this.UsersUrl}/livreur`)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    // Create User\r\n    create(User: User): Promise<IUser> {\r\n        return this.http.post(this.UsersUrl, User)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    // Login\r\n    login(User: LoginUser): Promise<any> {\r\n        return this.http.post(`${this.UsersUrl}/login`, User)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    // Logout\r\n    delete_token(id: string): Promise<any>  {\r\n        return this.http.delete(`${this.UsersUrl}/token/${id}`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n    }\r\n    deconnexion(token: string) {\r\n        let item= JSON.parse(localStorage.getItem(token));\r\n        let id_user=item[\"id_user\"];\r\n        this.delete_token(id_user);\r\n        localStorage.removeItem(token);\r\n        window.location.reload();\r\n    }\r\n\r\n    // Delete a User\r\n    delete(id: string): Promise<any> {\r\n        return this.http.delete(`${this.UsersUrl}/${id}`)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    //send Mail\r\n    validercompte(email: string): Promise<any> {\r\n        return this.http.get(`${this.UsersUrl}/valider/${email}`)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n    //mail existant\r\n    mail(email: string): Promise<IUser> {\r\n        return this.http.get(`${this.UsersUrl}/${email}`)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    //Resto by id\r\n    restoById(id: string): Promise<IUser> {\r\n        return this.http.get(`${this.UsersUrl}/resto/${id}`)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    //send Mail\r\n    sendMail(User: User): Promise<IUser> {\r\n        return this.http.post(`${this.UsersUrl}/sendmail`, User)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    // Error handling\r\n    private error(error: any) {\r\n        let message = (error.message) ? error.message :\r\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n        console.error(message);\r\n    }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\nimport { IUser, User } from 'src/app/entities/user/user.model';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-inscription',\r\n  templateUrl: './inscription.component.html',\r\n  styleUrls: ['./inscription.component.css']\r\n})\r\nexport class InscriptionComponent implements OnInit {\r\n\r\n  mail:IUser;\r\n    succes:boolean=false;\r\n    erreur:boolean=false;\r\n  UserForm: FormGroup;\r\n  email: string = '';\r\n  nom: string = '';\r\n  adresse: string = '';\r\n  valide: boolean = false;\r\n  profil: string = 'client';\r\n  mdp : string = '';\r\n  cmdp : string = '';\r\n  error: boolean = false;\r\n\r\n  @Output() createdUser = new EventEmitter<IUser>();\r\n\r\n  constructor(protected UserService: UserService, protected formBuilder: FormBuilder, private router: Router) { }\r\n\r\n  // Init the form when starting the view.\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  // Manage the submit action and create the new User.\r\n  onSubmit() {\r\n    const user = new User(this.UserForm.value['email'], this.UserForm.value['nom'], this.UserForm.value['adresse'],this.UserForm.value['valide'], this.UserForm.value['profil'], this.UserForm.value['mdp'], null);\r\n    if (this.UserForm.value['mdp']==this.UserForm.value['cmdp']) {\r\n      this.succes=false;\r\n      this.erreur=false;\r\n       this.UserService.mail(this.UserForm.value['email']).then((result: IUser) => {\r\n        this.mail = result;\r\n      });\r\n        if(!this.mail){\r\n          this.UserService.create(user).then((result: IUser) => {\r\n            if (result === undefined) {\r\n              this.error = true;\r\n            } else {\r\n              this.error = false;\r\n              this.createdUser.emit(result);\r\n            }\r\n          });\r\n          this.UserService.sendMail(user).then((result: IUser) => {\r\n            if (result === undefined) {\r\n              this.error = true;\r\n            } else {\r\n              this.error = false;\r\n              this.createdUser.emit(result);\r\n            }\r\n          });\r\n          this.succes=true;\r\n        } else {\r\n          this.erreur=true;\r\n        }\r\n    }\r\n  }\r\n\r\n  // Hide the error message.\r\n  hideError() {\r\n    this.error = false;\r\n  }\r\n\r\n  // Init the creation form.\r\n  private initForm() {\r\n    this.UserForm = new FormGroup({\r\n      nom: new FormControl(this.nom, Validators.required),\r\n      email: new FormControl(this.email, Validators.required),\r\n      adresse: new FormControl(this.adresse, Validators.required),\r\n      valide: new FormControl(this.valide, Validators.required),\r\n      profil: new FormControl(this.profil, Validators.required),\r\n      mdp: new FormControl(this.mdp, Validators.required),\r\n      cmdp: new FormControl(this.cmdp, Validators.required)\r\n    });\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Inscription</title>\r\n</head>\r\n\r\n<body class=\"size-1140\">\r\n    <header>\r\n        <a href=\"#\" class=\"logo\">Inscription</a>\r\n        <div class=\"rs\">\r\n\r\n        </div>\r\n    </header>\r\n    <section>\r\n        <div class=\"lien\">\r\n            <a href=\"login\">Connexion</a>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"inscription\">\r\n                <h2>Inscription</h2>\r\n                <p style=\"color: red\"></p>\r\n                <br>\r\n                <div *ngIf=\"succes\" class=\"alert alert-success\" role=\"alert\">\r\n                    Un message de confirmation a ete envoye sur votre email\r\n                </div>\r\n                <div *ngIf=\"erreur\" class=\"alert alert-danger\" role=\"alert\">\r\n                    Ce compte existe deja\r\n                </div>\r\n                <form class=\"customform\" [formGroup]=\"UserForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <label>Email</label>\r\n                    <input formControlName=\"email\" id=\"email\" type=\"email\" />\r\n                    <label>Nom</label>\r\n                    <input formControlName=\"nom\" id=\"nom\" type=\"text\" />\r\n                    <label>Adresse</label>\r\n                    <input formControlName=\"adresse\" id=\"adresse\" type=\"text\" />\r\n                    <label>Mot de passe</label>\r\n                    <input formControlName=\"mdp\" id=\"mdp\" type=\"password\" />\r\n                    <label>Confirmer mot de passe</label>\r\n                    <input formControlName=\"cmdp\" id=\"cmdp\" type=\"password\" />\r\n                    <button type=\"submit\" [disabled]=\"!UserForm.valid\">Valider</button>\r\n                </form>\r\n                <br>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <img class=\"footer\">\r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n</body>\r\n\r\n</html>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Commande, ICommande } from '../entities/commande/commande.model';\r\nimport { CommandeService } from '../entities/commande/commande.service';\r\nimport { UserService } from '../entities/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-livreur',\r\n  templateUrl: './livreur.component.html',\r\n  styleUrls: ['./livreur.component.css']\r\n})\r\nexport class LivreurComponent implements OnInit {\r\n  commandes: Array<ICommande> = [];\r\n  idResto:string=\"\";\r\n  id_user:string='';\r\n  email:string='';\r\n  nom:string='';\r\n  error: boolean = false;\r\n  quantite = new FormControl(Validators.required);\r\n\r\n  \r\n  constructor(private activatedRoute:ActivatedRoute, private user:UserService, private router:Router,private commandeserv:CommandeService) { }\r\n\r\n  ngOnInit(): void {\r\n    $('.menu-toggle').click(function(){\r\n      $('.menu-toggle').toggleClass('active');\r\n      $('nav').toggleClass('active');\r\n    });\r\n    let item= JSON.parse(localStorage.getItem(\"token_livreur\"));\r\n    if (!item) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      if (item[\"profil\"]!=\"livreur\") {\r\n        this.user.deconnexion(\"token_livreur\");\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.id_user=item[\"id_user\"];\r\n        this.email=item[\"email\"];\r\n        this.nom=item[\"nom\"];\r\n      }\r\n    }\r\n    this.loadAll();\r\n  }\r\n  onsubmit(commande: Commande){\r\n    if(confirm(\"Livrer cette commande?\")==true){\r\n      this.commandeserv.livrer(commande._id);\r\n    }else{}\r\n  }\r\n  private loadAll() {\r\n    this.idResto=this.activatedRoute.snapshot.params[\"id\"];\r\n    this.commandeserv\r\n      .livraison(this.id_user)\r\n      .then((result: Array<ICommande>) => {\r\n        this.commandes = result;\r\n      });\r\n  }\r\n  deconnexion(){\r\n    this.user.deconnexion(\"token_livreur\");\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Livreur</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"livreur\" class=\"logo\">Livreur</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a class=\"focus\" href=\"livreur\">Livraison</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <table class=\"content-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Plat</th>\r\n            <th>quantite</th>\r\n            <th>Prix</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let commande of commandes\">\r\n                <td>{{ commande.nom }}</td>\r\n                <td>{{ commande.quantite }}</td>\r\n                <td>{{ commande.prixUnitaire*commande.quantite }}</td>\r\n                <td><a (click)=\"onsubmit(commande)\">Livrer</a></td>\r\n            </tr>\r\n        </tbody>\r\n        </table>\r\n    \r\n    <img class=\"footer\">\r\n    \r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n</body>\r\n\r\n</html>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\nimport { LoginUser, LUser } from '../entities/user/user.model';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  UserForm: FormGroup;\r\n  email: string = '';\r\n    mdp: string = '';\r\n    message=\"\";\r\n    user=[] as any;\r\n    error: boolean = false;\r\n  erreur:boolean=false;\r\n    \r\n  constructor(protected UserService: UserService, protected activatedRoute:ActivatedRoute,protected router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    let mail=this.activatedRoute.snapshot.params[\"email\"];\r\n    if(mail!=null){\r\n      this.UserService.validercompte(mail);\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n  onSubmit(){\r\n    const user =new LoginUser(this.UserForm.value['email'],this.UserForm.value['mdp']);\r\n  //  console.log(this.email);\r\n   // console.log(user);\r\n    this.UserService.login(user).then((result: LUser) => {\r\n      if (result === undefined) {\r\n          this.erreur=false;\r\n          this.error = true;\r\n          this.erreur=true;\r\n\r\n      } else {\r\n        this.error = false;\r\n        \r\n        if(result[\"status\"]==\"NON\"){\r\n          this.erreur=false;\r\n\r\n          console.log(\"NONONON\");\r\n          this.message=result[\"message\"];\r\n          this.erreur=true;\r\n\r\n        }\r\n        else if(result[\"status\"]==\"OK\"){\r\n          console.log(\"YES\");\r\n          this.message=result[\"message\"];\r\n          console.log(result);\r\n         \r\n          if(result[\"profil\"]==\"client\")\r\n          {\r\n            localStorage.setItem(\"token_client\",JSON.stringify(result));\r\n           let item = JSON.parse(localStorage.getItem(\"token_client\"));\r\n            this.router.navigateByUrl(\"/client\");\r\n          }\r\n          if(result[\"profil\"]==\"resto\")\r\n          {\r\n            localStorage.setItem(\"token_resto\",JSON.stringify(result));\r\n            let item = JSON.parse(localStorage.getItem(\"token_resto\"));\r\n            this.router.navigateByUrl(\"/restaurant\");\r\n          }\r\n          if(result[\"profil\"]==\"admin\")\r\n          {\r\n            localStorage.setItem(\"token_admin\",JSON.stringify(result));\r\n            let item = JSON.parse(localStorage.getItem(\"token_admin\"));\r\n            this.router.navigateByUrl(\"/admin\");\r\n          }\r\n\r\n          if(result[\"profil\"]==\"livreur\")\r\n          {\r\n            localStorage.setItem(\"token_livreur\",JSON.stringify(result));\r\n           let item = JSON.parse(localStorage.getItem(\"token_livreur\"));\r\n            this.router.navigateByUrl(\"/livreur\");\r\n          }\r\n         \r\n          //console.log(\"ITO\"+item[\"token\"]);\r\n\r\n        }\r\n        \r\n         // this.createdUser.emit(result);\r\n          //this.refresh();\r\n       \r\n      }\r\n    });\r\n     \r\n  }\r\n  private initForm() {\r\n    this.UserForm = new FormGroup({\r\n      email: new FormControl(this.email, Validators.required),\r\n      mdp: new FormControl(this.mdp, Validators.required)\r\n    });\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Connexion</title>\r\n</head>\r\n\r\n<body>\r\n    <header>\r\n        <a href=\"#\" class=\"logo\">Login</a>\r\n        <div class=\"rs\">\r\n\r\n        </div>\r\n    </header>\r\n    <section>\r\n        <div class=\"lien\">\r\n\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"connexion\">\r\n                <img src=\"\">\r\n                <p>Connexion</p>\r\n                <p style=\"color: red\"></p>\r\n                <br>\r\n                <div *ngIf=\"erreur\" class=\"alert alert-danger\" role=\"alert\">\r\n                    Email ou mot de passe incorrect\r\n                </div>\r\n                <form class=\"customform\" [formGroup]=\"UserForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <label>E-mail</label>\r\n                    <input formControlName=\"email\" id=\"email\" type=\"text \" />\r\n                    <label>Mot de passe</label>\r\n                    <input formControlName=\"mdp\" id=\"mdp\" type=\"password\" />\r\n                    <button type=\"submit\" [disabled]=\"!UserForm.valid\">Valider</button>\r\n                </form>\r\n                <div class=\"s-12 l-7 \">\r\n                    <a href=\"inscription \">\r\n                        <h2>ou inscrivez vous!</h2>\r\n                    </a>\r\n                </div>\r\n                <br>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <img class=\"footer \">\r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n</body>\r\n\r\n</html>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ProductService } from 'src/app/entities/product/product.service';\nimport { IProduct, Product } from 'src/app/entities/product/product.model';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent implements OnInit {\n\n  productForm: FormGroup;\n  name: string = '';\n  brand: string = '';\n  error: boolean = false;\n\n  @Output() createdProduct = new EventEmitter<IProduct>();\n\n  constructor(protected productService: ProductService, protected formBuilder: FormBuilder) { }\n\n  // Init the form when starting the view.\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  // Manage the submit action and create the new product.\n  onSubmit() {\n    const product = new Product(this.productForm.value['name'], this.productForm.value['brand'], null);\n    this.productService.create(product).then((result: IProduct) => {\n      if (result === undefined) {\n        this.error = true;\n      } else {\n        this.error = false;\n        this.createdProduct.emit(result);\n      }\n    });\n  }\n\n  // Hide the error message.\n  hideError() {\n    this.error = false;\n  }\n\n  // Init the creation form.\n  private initForm() {\n    this.productForm = new FormGroup({\n      name: new FormControl(this.name, Validators.required),\n      brand: new FormControl(this.brand, Validators.required)\n    });\n  }\n\n}\n","<h4>Create a product:</h4>\n<div *ngIf=\"error\">\n    <hr>\n    <div class=\"alert alert-danger alert-dismissible\" role=\"alert\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span\n                aria-hidden=\"true\" (click)=\"hideError()\">&times;</span></button>\n        <strong>Warning!</strong> Error creating product.\n    </div>\n    <hr>\n</div>\n<form class=\"form-horizontal\" [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"name\" class=\"col-sm-2 control-label\">Name</label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"brand\" class=\"col-sm-2 control-label\">Brand</label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" id=\"brand\" formControlName=\"brand\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"col-sm-offset-2 col-sm-10\">\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!productForm.valid\">Create</button>\n        </div>\n    </div>\n</form>","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { ProductService } from 'src/app/entities/product/product.service';\nimport { IProduct } from 'src/app/entities/product/product.model';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit, OnChanges {\n\n  products: Array<IProduct> = [];\n  @Input() productToDisplay: IProduct = null;\n\n  constructor(protected productService: ProductService) { }\n\n  // Load all the products when starting the view.\n  ngOnInit(): void {\n    this.loadAll();\n  }\n\n  // If new product created, we add it to the list.\n  ngOnChanges(): void {\n    if (this.productToDisplay !== null) {\n      this.products.push(this.productToDisplay);\n    }\n  }\n\n  // Delete a product. \n  delete(id: string) {\n    this.productService.delete(id).then((result: any) => this.loadAll());\n  }\n\n  // Load all products.\n  private loadAll() {\n    this.productService\n      .get()\n      .then((result: Array<IProduct>) => {\n        this.products = result;\n      });\n  }\n\n}\n","<h4>Products:</h4>\r\n\r\n<table *ngIf=\"products.length > 0\" class=\"table\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Brand</th>\r\n            <th scope=\"col\">Actions</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let product of products\">\r\n            <td>{{ product.name }}</td>\r\n            <td>{{ product.brand }}</td>\r\n            <td> <a class=\"delete\" (click)=\"delete(product._id)\">Delete</a> </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<div *ngIf=\"products.length === 0\" class=\"alert alert-info\" role=\"info\">\r\n    <span class=\"glyphicon glyphicon-exclamation-sign\" aria-hidden=\"true\"></span>\r\n    <span class=\"sr-only\">Information:</span> The product collection is empty.\r\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Commande, ICommande } from 'src/app/entities/commande/commande.model';\r\nimport { CommandeService } from 'src/app/entities/commande/commande.service';\r\nimport { IPlat,Plat } from 'src/app/entities/plat/plat.model';\r\nimport { PlatService } from 'src/app/entities/plat/plat.service';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-benefice',\r\n  templateUrl: './benefice.component.html',\r\n  styleUrls: ['./benefice.component.css']\r\n})\r\nexport class BeneficeComponent implements OnInit {\r\n\r\n  commandes: Array<ICommande> = [];\r\n  idResto:string=\"\";\r\n  id_user:string='';\r\n  email:string='';\r\n  nom:string='';\r\n  error: boolean = false;\r\n  quantite = new FormControl(Validators.required);\r\n\r\n  @Output() createdCommande = new EventEmitter<ICommande>();\r\n  \r\n  constructor(private platserv:PlatService,private activatedRoute:ActivatedRoute, private user:UserService, private router:Router,private commandeserv:CommandeService) { }\r\n\r\n  ngOnInit(): void {\r\n    $('.menu-toggle').click(function(){\r\n      $('.menu-toggle').toggleClass('active');\r\n      $('nav').toggleClass('active');\r\n    });\r\n    let item= JSON.parse(localStorage.getItem(\"token_resto\"));\r\n    if (!item) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      if (item[\"profil\"]!=\"resto\") {\r\n        this.user.deconnexion(\"token_resto\");\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.id_user=item[\"id_user\"];\r\n        this.email=item[\"email\"];\r\n        this.nom=item[\"nom\"];\r\n      }\r\n    }\r\n    this.loadAll();\r\n  }\r\n  onsubmit(plat:Plat){\r\n    \r\n  }\r\n  private loadAll() {\r\n    this.commandeserv\r\n      .benefice(this.id_user)\r\n      .then((result: Array<ICommande>) => {\r\n        this.commandes = result;\r\n      });\r\n  }\r\n  deconnexion(){\r\n    this.user.deconnexion(\"token_resto\");\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Livreur</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"livreur\" class=\"logo\">Restaurant</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a href=\"restaurant\">Plats</a></li>\r\n                <li class=\"mid\"><a href=\"plat/nouveau\">Nouveaux-plats</a></li>\r\n                <li class=\"mid\"><a href=\"restaurant/commande\">Commande</a></li>\r\n                <li class=\"mid\"><a class=\"focus\" href=\"restaurant/benefice\">Benefices</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <table class=\"content-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Plat</th>\r\n            <th>Quantite vendu</th>\r\n            <th>Benefice</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let commande of commandes\">\r\n                <td>{{ commande._id }}</td>\r\n                <td>{{ commande.quantite}}</td>\r\n                <td>{{ (commande.quantite*commande.totalPrix)-(commande.quantite*commande.totalRevient)}}</td>\r\n            </tr>\r\n        </tbody>\r\n        </table>\r\n    \r\n    <img class=\"footer\">\r\n    \r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n</body>\r\n\r\n</html>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as $ from 'jquery';\nimport { Commande, ICommande } from 'src/app/entities/commande/commande.model';\nimport { CommandeService } from 'src/app/entities/commande/commande.service';\nimport { UserService } from 'src/app/entities/user/user.service';\n\n@Component({\n  selector: 'app-commande',\n  templateUrl: './commande.component.html',\n  styleUrls: ['./commande.component.css']\n})\nexport class CommandeRestaurantComponent implements OnInit {\n  commandes: Array<ICommande> = [];\n  idResto:string=\"\";\n  id_user:string='';\n  email:string='';\n  constructor( protected formBuilder: FormBuilder,private activatedRoute:ActivatedRoute, private router: Router, private user:UserService, private commandeserv:CommandeService) { }\n\n  ngOnInit(): void {\n    $('.menu-toggle').click(function(){\n      $('.menu-toggle').toggleClass('active');\n      $('nav').toggleClass('active');\n    });\n    let item= JSON.parse(localStorage.getItem(\"token_resto\"));\n    if (!item) {\n      this.router.navigate(['/login']);\n    } else {\n      if (item[\"profil\"]!=\"resto\") {\n        this.user.deconnexion(\"token_resto\");\n        this.router.navigate(['/login']);\n      } else {\n        this.id_user=item[\"id_user\"];\n        this.email=item[\"email\"];\n      }\n    }\n    this.loadAll();\n  }\n  onsubmit(commande:Commande){\n\n  }\n  private loadAll() {\n    this.commandeserv\n      .CommandeResto(this.id_user)\n      .then((result: Array<ICommande>) => {\n        this.commandes = result;\n      });\n  }\n  deconnexion(){\n    this.user.deconnexion(\"token_resto\");\n  }\n}\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Livreur</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"livreur\" class=\"logo\">Restaurant</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a href=\"restaurant\">Plats</a></li>\r\n                <li class=\"mid\"><a href=\"plat/nouveau\">Nouveaux-plats</a></li>\r\n                <li class=\"mid\"><a class=\"focus\" href=\"restaurant/commande\">Commande</a></li>\r\n                <li class=\"mid\"><a href=\"restaurant/benefice\">Benefices</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <table class=\"content-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Plat</th>\r\n            <th>quantite</th>\r\n            <th>Prix</th>\r\n            <th>Client</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let commande of commandes\">\r\n                <td>{{ commande.nom }}</td>\r\n                <td>{{ commande.quantite }}</td>\r\n                <td>{{ commande.prixUnitaire*commande.quantite }}</td>\r\n                <td>{{ commande.Client }}</td>\r\n            </tr>\r\n        </tbody>\r\n        </table>\r\n    \r\n    <img class=\"footer\">\r\n    \r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n</body>\r\n\r\n</html>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport * as $ from 'jquery';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-restaurant',\r\n  templateUrl: './restaurant.component.html',\r\n  styleUrls: ['./restaurant.component.css']\r\n})\r\nexport class RestaurantComponent implements OnInit {\r\n  id_user:string='';\r\n  email:string='';\r\n  nom:string='';\r\n  constructor(private router:Router,private user:UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    $('.menu-toggle').click(function(){\r\n      $('.menu-toggle').toggleClass('active');\r\n      $('nav').toggleClass('active');\r\n    });\r\n    let item= JSON.parse(localStorage.getItem(\"token_resto\"));\r\n    if (!item) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      if (item[\"profil\"]!=\"resto\") {\r\n        this.user.deconnexion(\"token_resto\");\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.id_user=item[\"id_User\"];\r\n        this.email=item[\"email\"];\r\n        this.nom=item[\"nom\"];\r\n      }\r\n    }\r\n  }\r\n  deconnexion(){\r\n    this.user.deconnexion(\"token_resto\");\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Agence de communication Minucia Madagascar</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"restaurant\" class=\"logo\">Restaurant</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a class=\"focus\" href=\"restaurant\">Plats</a></li>\r\n                <li class=\"mid\"><a href=\"plat/nouveau\">Nouveaux-plats</a></li>\r\n                <li class=\"mid\"><a href=\"restaurant/commande\">Commande</a></li>\r\n                <li class=\"mid\"><a href=\"restaurant/benefice\">Benefices</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <div class=\"titre\">\r\n        <img class=\"header\" alt=\"header\" src=\"assets/pictogrammes/elements/resto.webp\">\r\n        <h1 class=\"titre1\">E-kaly</h1>\r\n        <h1 class=\"we_care\">Satisfait ou rembourser</h1>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <div class=\"half clearfix\">\r\n        <div class=\"div\">\r\n            <div class=\"plat\">\r\n                <img class=\"header\" alt=\"header\" src=\"assets/pictogrammes/elements/resto.webp\">\r\n            </div>\r\n            <button>visible</button>\r\n            <button>Supprimer</button>\r\n        </div>\r\n        <div class=\"div\">\r\n            <div class=\"plat\">\r\n\r\n            </div>\r\n            <button>visible</button>\r\n            <button>Supprimer</button>\r\n        </div>\r\n        <div class=\"div\">\r\n            <div class=\"plat\">\r\n\r\n            </div>\r\n            <button>visible</button>\r\n            <button>Supprimer</button>\r\n        </div>\r\n        <div class=\"div\">\r\n            <div class=\"plat\">\r\n\r\n            </div>\r\n            <button>visible</button>\r\n            <button>Supprimer</button>\r\n        </div>\r\n    </div>\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n    <script type=\"text/javascript\">\r\n        /*window.addEventListener(\"scroll\",function(){  \r\n                                                                                \t\t\tvar header=document.querySelector(\"header\");\r\n                                                                                \t\t\theader.classList.toggle(\"stick\", window.scrollY > 0);\r\n                                                                                \t\t});*/\r\n        $(document).ready(function($) {\r\n            $('.menu-toggle').click(function() {\r\n                $('.menu-toggle').toggleClass('active');\r\n                $('nav').toggleClass('active');\r\n            });\r\n        });\r\n    </script>\r\n</body>\r\n\r\n</html>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {Router} from \"@angular/router\";\r\nimport * as $ from 'jquery';\r\nimport { IPlat,Plat } from 'src/app/entities/plat/plat.model';\r\nimport { PlatService } from 'src/app/entities/plat/plat.service';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\n@Component({\r\n  selector: 'app-new-plat',\r\n  templateUrl: './new-plat.component.html',\r\n  styleUrls: ['./new-plat.component.css']\r\n})\r\nexport class NewPlatComponent implements OnInit {\r\n  id_user:string='';\r\n  email:string='';\r\n  PlatForm: FormGroup;\r\n  nom : string= '';\r\n  prixVente : string= '';\r\n  prixRevient : string= '';\r\n  visible : string= '';\r\n  error: boolean = false;\r\n\r\n  @Output() createdPlat = new EventEmitter<IPlat>();\r\n\r\n  constructor(protected PlatService: PlatService, protected formBuilder: FormBuilder, private router: Router, private user:UserService) { }\r\n\r\n  // Init the form when starting the view.\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    $('.menu-toggle').click(function(){\r\n      $('.menu-toggle').toggleClass('active');\r\n      $('nav').toggleClass('active');\r\n    });\r\n    let item= JSON.parse(localStorage.getItem(\"token_resto\"));\r\n    if (!item) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      if (item[\"profil\"]!=\"resto\") {\r\n        this.user.deconnexion(\"token_resto\");\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.id_user=item[\"id_user\"];\r\n        this.email=item[\"email\"];\r\n      }\r\n    }\r\n  }\r\n\r\n  // Manage the submit action and create the new Plat.\r\n  onSubmit() {\r\n    if(this.PlatForm.value['visible']==\"true\"){\r\n    const plat = new Plat(null,this.PlatForm.value['nom'], this.PlatForm.value['prixRevient'],this.PlatForm.value['prixVente'], true, this.id_user, null);\r\n      this.PlatService.create(plat).then((result: IPlat) => {\r\n        if (result === undefined) {\r\n          this.error = true;\r\n        } else {\r\n          this.error = false;\r\n          this.createdPlat.emit(result);\r\n        }\r\n      });\r\n    }else{\r\n      const plat = new Plat(null,this.PlatForm.value['nom'], this.PlatForm.value['prixRevient'],this.PlatForm.value['prixVente'], false, this.id_user, null);\r\n        this.PlatService.create(plat).then((result: IPlat) => {\r\n          if (result === undefined) {\r\n            this.error = true;\r\n          } else {\r\n            this.error = false;\r\n            this.createdPlat.emit(result);\r\n          }\r\n        });\r\n      }\r\n    this.router.navigate(['/restaurant']);\r\n    \r\n  }\r\n\r\n  // Hide the error message.\r\n  hideError() {\r\n    this.error = false;\r\n  }\r\n\r\n  deconnexion(){\r\n    this.user.deconnexion(\"token_resto\");\r\n  }\r\n  // Init the creation form.\r\n  private initForm() {\r\n    this.PlatForm = new FormGroup({\r\n      nom: new FormControl(this.nom, Validators.required),\r\n      prixRevient: new FormControl(this.prixRevient, Validators.required),\r\n      prixVente: new FormControl(this.prixVente, Validators.required),\r\n      visible: new FormControl(this.visible, Validators.required)\r\n    });\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Nouveau plat</title>\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body class=\"size-1140\">\r\n    <header>\r\n        <a href=\"restaurant\" class=\"logo\">Restaurant</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a href=\"restaurant\">Plats</a></li>\r\n                <li class=\"mid\"><a class=\"focus\" href=\"plat/nouveau\">Nouveaux-plats</a></li>\r\n                <li class=\"mid\"><a href=\"restaurant/commande\">Commande</a></li>\r\n                <li class=\"mid\"><a href=\"restaurant/benefice\">Benefices</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n    <section>\r\n        <div class=\"lien\">\r\n\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form\">\r\n                <p style=\"color: red\"></p>\r\n                <br>\r\n                <form class=\"customform\" [formGroup]=\"PlatForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <label>nom</label>\r\n                    <input formControlName=\"nom\" id=\"nom\" type=\"text\" />\r\n                    <label>prix revient</label>\r\n                    <input formControlName=\"prixRevient\" id=\"prixRevient\" type=\"number\" />\r\n                    <label>prix vente</label>\r\n                    <input formControlName=\"prixVente\" id=\"prixVente\" type=\"number\" />\r\n                    <label>visible sur le site e-kaly</label>\r\n                    <select formControlName=\"visible\">\r\n                      <option value=\"true\">Visible</option>\r\n                      <option value=\"false\">Non visible</option>\r\n                    </select>\r\n                    <button type=\"submit\" [disabled]=\"!PlatForm.valid\">Valider</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <img class=\"footer\" src=\"\">\r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n</body>\r\n<script type=\"text/javascript\">\r\n    /*window.addEventListener(\"scroll\",function(){  \r\n                                                                                        var header=document.querySelector(\"header\");\r\n                                                                                        header.classList.toggle(\"stick\", window.scrollY > 0);\r\n                                                                                    });*/\r\n    $(document).ready(function($) {\r\n        $('.menu-toggle').click(function() {\r\n            $('.menu-toggle').toggleClass('active');\r\n            $('nav').toggleClass('active');\r\n        });\r\n    });\r\n</script>\r\n</html>","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatusService {\n  private statusUrl = '/api/status';\n\n  constructor(private http: Http) { }\n\n  // Get the status\n  getStatus(): Promise<void | any> {\n    return this.http.get(this.statusUrl)\n               .toPromise()\n               .then(response => response.json())\n               .catch(this.error);\n  }\n\n  // Error handling\n  private error (error: any) {\n    let message = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.error(message);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}