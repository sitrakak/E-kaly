{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin/admin.component.ts","./src/app/admin/admin/admin.component.html","./src/app/admin/benefice/benefice.component.ts","./src/app/admin/benefice/benefice.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/client/client/client.component.ts","./src/app/client/client/client.component.html","./src/app/client/commande/commande.component.ts","./src/app/client/commande/commande.component.html","./src/app/client/livrer/livrer.component.ts","./src/app/client/livrer/livrer.component.html","./src/app/entities/commande/commande.model.ts","./src/app/entities/commande/commande.service.ts","./src/app/entities/plat/plat.model.ts","./src/app/entities/plat/plat.service.ts","./src/app/entities/product/product.model.ts","./src/app/entities/product/product.service.ts","./src/app/entities/user/user.model.ts","./src/app/entities/user/user.service.ts","./src/app/inscription/inscription.component.ts","./src/app/inscription/inscription.component.html","./src/app/livreur/livreur.component.ts","./src/app/livreur/livreur.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/product/product-create/product-create.component.ts","./src/app/product/product-create/product-create.component.html","./src/app/product/product-list/product-list.component.ts","./src/app/product/product-list/product-list.component.html","./src/app/restaurant/benefice/benefice.component.ts","./src/app/restaurant/benefice/benefice.component.html","./src/app/restaurant/commande/commande.component.ts","./src/app/restaurant/commande/commande.component.html","./src/app/restaurant/liste-plat/restaurant.component.ts","./src/app/restaurant/liste-plat/restaurant.component.html","./src/app/restaurant/new-plat/new-plat.component.ts","./src/app/restaurant/new-plat/new-plat.component.html","./src/app/shared/status.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Commande, ICommande } from 'src/app/entities/commande/commande.model';\r\nimport { CommandeService } from 'src/app/entities/commande/commande.service';\r\nimport { IPlat,Plat } from 'src/app/entities/plat/plat.model';\r\nimport { PlatService } from 'src/app/entities/plat/plat.service';\r\nimport { IUser } from 'src/app/entities/user/user.model';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  commandes: Array<ICommande> = [];\r\n  livreurs: Array<IUser> = [];\r\n  id_user:string='';\r\n  email:string='';\r\n  nom:string='';\r\n  error: boolean = false;\r\n  livreur = new FormControl(Validators.required);\r\n\r\n  @Output() createdCommande = new EventEmitter<ICommande>();\r\n  \r\n  constructor(private activatedRoute:ActivatedRoute, private user:UserService, private router:Router,private commandeserv:CommandeService) { }\r\n\r\n  ngOnInit(): void {\r\n    $('.menu-toggle').click(function(){\r\n      $('.menu-toggle').toggleClass('active');\r\n      $('nav').toggleClass('active');\r\n    });\r\n    let item= JSON.parse(localStorage.getItem(\"token_admin\"));\r\n    if (!item) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      if (item[\"profil\"]!=\"admin\") {\r\n        this.user.deconnexion(\"token_admin\");\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.id_user=item[\"id_user\"];\r\n        this.email=item[\"email\"];\r\n        this.nom=item[\"nom\"];\r\n      }\r\n    }\r\n    this.loadAll();\r\n  }\r\n  onsubmit(commande:Commande){\r\n    if(this.livreur.value!=\" \"){\r\n      if(confirm(\"Assigner ce livreur pour ce commande\")==true){\r\n        this.commandeserv.assigner(commande._id,this.livreur.value);\r\n      }else{}\r\n    }\r\n  }\r\n  private loadAll() {\r\n    this.commandeserv\r\n      .commande()\r\n      .then((result: Array<ICommande>) => {\r\n        this.commandes = result;\r\n      });\r\n    this.user\r\n      .livreur()\r\n      .then((result: Array<IUser>) => {\r\n        this.livreurs = result;\r\n      });\r\n  }\r\n  deconnexion(){\r\n    this.user.deconnexion(\"token_admin\");\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Commande</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"admin\" class=\"logo\">Admin</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a class=\"focus\" href=\"admin\">Commandes</a></li>\r\n                <li class=\"mid\"><a href=\"admin/resto\">Restaurant</a></li>\r\n                <li class=\"mid\"><a href=\"admin/livreur\">Livreur</a></li>\r\n                <li class=\"mid\"><a href=\"admin/benefice\">Benefice</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <table class=\"content-table\">\r\n        <thead>\r\n            <tr>\r\n              <th>Plat</th>\r\n              <th>quantite</th>\r\n              <th>Prix</th>\r\n              <th>Client</th>\r\n              <th>livreur</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tr *ngFor=\"let commande of commandes\">\r\n                  <td>{{ commande.nom }}</td>\r\n                  <td>{{ commande.quantite }}</td>\r\n                  <td>{{ commande.prixUnitaire*commande.quantite }}</td>\r\n                  <td>{{ commande.Client }}</td>\r\n                <td>\r\n                    <select [formControl]=\"livreur\">\r\n                        <option *ngFor=\"let livreur of livreurs\" [value]=\"livreur._id\">{{ livreur.nom }}</option>\r\n                      </select>\r\n                </td>\r\n                <td><a (click)=\"onsubmit(commande)\">Assigner</a></td>\r\n            </tr>\r\n        </tbody>\r\n        </table>\r\n    \r\n    <img class=\"footer\">\r\n    \r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n    <script type=\"text/javascript \">\r\n        $(document).ready(function($) {\r\n            $('.menu-toggle').click(function() {\r\n                $('.menu-toggle').toggleClass('active');\r\n                $('nav').toggleClass('active');\r\n            });\r\n        });\r\n    </script>\r\n</body>\r\n\r\n</html>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Commande, ICommande } from 'src/app/entities/commande/commande.model';\r\nimport { CommandeService } from 'src/app/entities/commande/commande.service';\r\nimport { IPlat,Plat } from 'src/app/entities/plat/plat.model';\r\nimport { PlatService } from 'src/app/entities/plat/plat.service';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-benefice',\r\n  templateUrl: './benefice.component.html',\r\n  styleUrls: ['./benefice.component.css']\r\n})\r\nexport class BeneficeRestoComponent implements OnInit {\r\n\r\n  commandes: Array<ICommande> = [];\r\n  idResto:string=\"\";\r\n  id_user:string='';\r\n  email:string='';\r\n  nom:string='';\r\n  error: boolean = false;\r\n  quantite = new FormControl(Validators.required);\r\n\r\n  @Output() createdCommande = new EventEmitter<ICommande>();\r\n  \r\n  constructor(private platserv:PlatService,private activatedRoute:ActivatedRoute, private user:UserService, private router:Router,private commandeserv:CommandeService) { }\r\n\r\n  ngOnInit(): void {\r\n    $('.menu-toggle').click(function(){\r\n      $('.menu-toggle').toggleClass('active');\r\n      $('nav').toggleClass('active');\r\n    });\r\n    let item= JSON.parse(localStorage.getItem(\"token_admin\"));\r\n    if (!item) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      if (item[\"profil\"]!=\"admin\") {\r\n        this.user.deconnexion(\"token_admin\");\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.id_user=item[\"id_user\"];\r\n        this.email=item[\"email\"];\r\n        this.nom=item[\"nom\"];\r\n      }\r\n    }\r\n    this.loadAll();\r\n  }\r\n  onsubmit(plat:Plat){\r\n    \r\n  }\r\n  private loadAll() {\r\n    this.commandeserv\r\n      .beneficeResto()\r\n      .then((result: Array<ICommande>) => {\r\n        this.commandes = result;\r\n      });\r\n  }\r\n  deconnexion(){\r\n    this.user.deconnexion(\"token_admin\");\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Livreur</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"admin\" class=\"logo\">Admin</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a href=\"admin\">Commandes</a></li>\r\n                <li class=\"mid\"><a href=\"admin/resto\">Restaurant</a></li>\r\n                <li class=\"mid\"><a href=\"admin/livreur\">Livreur</a></li>\r\n                <li class=\"mid\"><a class=\"focus\" href=\"admin/benefice\">Benefice</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <table class=\"content-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Restaurant</th>\r\n            <th>Quantite vendu</th>\r\n            <th>Benefice</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let commande of commandes\">\r\n                <td>{{ commande._id }}</td>\r\n                <td>{{ commande.quantite}}</td>\r\n                <td>{{ (commande.quantite*commande.totalPrix)-(commande.quantite*commande.totalRevient)}}</td>\r\n            </tr>\r\n        </tbody>\r\n        </table>\r\n    \r\n    <img class=\"footer\">\r\n    \r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n</body>\r\n\r\n</html>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminComponent } from './admin/admin/admin.component';\r\nimport { BeneficeRestoComponent } from './admin/benefice/benefice.component';\r\nimport { ClientComponent } from './client/client/client.component';\r\nimport { CommandeComponent } from './client/commande/commande.component';\r\nimport { LivrerComponent } from './client/livrer/livrer.component';\r\nimport { InscriptionComponent } from './inscription/inscription.component';\r\nimport { LivreurComponent } from './livreur/livreur.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { BeneficeComponent } from './restaurant/benefice/benefice.component';\r\nimport { CommandeRestaurantComponent } from './restaurant/commande/commande.component';\r\nimport { RestaurantComponent } from './restaurant/liste-plat/restaurant.component';\r\nimport { NewPlatComponent } from './restaurant/new-plat/new-plat.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  {path:'login/:email',component:LoginComponent},\r\n  {path:'login',component:LoginComponent},\r\n  {path:'restaurant',component:RestaurantComponent},\r\n  {path:'client',component:ClientComponent},\r\n  {path:'commande/:id',component:CommandeComponent},\r\n  {path:'admin',component:AdminComponent},\r\n  {path:'livreur',component:LivreurComponent},\r\n  {path:'plat/nouveau',component:NewPlatComponent},\r\n  {path:'inscription',component:InscriptionComponent},\r\n  {path:'commande-en-cours',component:LivrerComponent},\r\n  {path:'restaurant/commande',component:CommandeRestaurantComponent},\r\n  {path:'restaurant/benefice',component:BeneficeComponent},\r\n  {path:'admin/benefice',component:BeneficeRestoComponent}\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { StatusService } from './shared/status.service';\nimport { IProduct } from './entities/product/product.model';\nimport { isPromise } from '@angular/compiler/src/util';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'node-express-angular';\n  status = 'DOWN';\n  createdProduct: IProduct = null;\n\n  constructor(protected statusService: StatusService) { }\n\n  // Get the server status when starting the view.\n  ngOnInit() {\n    this.statusService\n      .getStatus()\n      .then((result: any) => {\n        this.status = result.status;\n      });\n  }\n\n  // Get the new product created.\n  onCreatedProduct(createdProduct: IProduct) {\n    this.createdProduct = createdProduct;\n  }\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, Compiler } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpModule } from '@angular/http';\r\nimport { ProductListComponent } from './product/product-list/product-list.component';\r\nimport { ProductCreateComponent } from './product/product-create/product-create.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RestaurantComponent } from './restaurant/liste-plat/restaurant.component';\r\nimport { ClientComponent } from './client/client/client.component';\r\nimport { InscriptionComponent } from './inscription/inscription.component';\r\nimport { NewPlatComponent } from './restaurant/new-plat/new-plat.component';\r\nimport { AdminComponent } from './admin/admin/admin.component';\r\nimport { LivreurComponent } from './livreur/livreur.component';\r\nimport { CommandeComponent } from './client/commande/commande.component';\r\nimport { CommandeRestaurantComponent } from './restaurant/commande/commande.component';\r\nimport { LivrerComponent } from './client/livrer/livrer.component';\r\nimport { BeneficeComponent } from './restaurant/benefice/benefice.component';\r\nimport { BeneficeRestoComponent } from './admin/benefice/benefice.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProductListComponent,\r\n    ProductCreateComponent,\r\n    LoginComponent,\r\n    RestaurantComponent,\r\n    ClientComponent,\r\n    InscriptionComponent,\r\n    NewPlatComponent,\r\n    AdminComponent,\r\n    LivreurComponent,\r\n    CommandeComponent,\r\n    CommandeRestaurantComponent,\r\n    LivrerComponent,\r\n    BeneficeComponent,\r\n    BeneficeRestoComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IUser } from 'src/app/entities/user/user.model';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-client',\r\n  templateUrl: './client.component.html',\r\n  styleUrls: ['./client.component.css']\r\n})\r\nexport class ClientComponent implements OnInit {\r\n  resto:Array<IUser> = [];\r\n  id_user:string='';\r\n  email:string='';\r\n  nom:string='';\r\n  constructor(private router:Router, private user:UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    $('.menu-toggle').click(function(){\r\n      $('.menu-toggle').toggleClass('active');\r\n      $('nav').toggleClass('active');\r\n    });\r\n    let item= JSON.parse(localStorage.getItem(\"token_client\"));\r\n    if (!item) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      if (item[\"profil\"]!=\"client\") {\r\n        this.user.deconnexion(\"token_client\");\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.id_user=item[\"id_user\"];\r\n        this.email=item[\"email\"];\r\n        this.nom=item[\"nom\"];\r\n      }\r\n    }\r\n    this.loadAll();\r\n  }\r\n  private loadAll() {\r\n    this.user\r\n      .resto()\r\n      .then((result: Array<IUser>) => {\r\n        this.resto = result;\r\n      });\r\n  }\r\n  deconnexion(){\r\n    this.user.deconnexion(\"token_client\");\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Liste Restaurant</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"client\" class=\"logo\">Client</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a class=\"focus\" href=\"client\">Commander</a></li>\r\n                <li class=\"mid\"><a href=\"commande-en-cours\">Commande en cours</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <div class=\"titre\">\r\n        <img class=\"header\" alt=\"header\" src=\"assets/pictogrammes/elements/resto.webp\">\r\n        <h1 class=\"titre1\">E-kaly</h1>\r\n        <h1 class=\"we_care\">Satisfait ou rembourser</h1>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <div class=\"half clearfix\">\r\n        <div class=\"div\" *ngFor=\"let rest of resto\">\r\n            <div class=\"plat\">\r\n                <a href=\"commande/{{ rest._id }}\"><img class=\"header \" alt=\"header \" src=\"assets/pictogrammes/elements/resto.webp \"></a>\r\n            </div>\r\n            <h1>{{ rest.nom }}</h1>\r\n        </div>\r\n    </div>\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n    <script type=\"text/javascript \">\r\n        $(document).ready(function($) {\r\n            $('.menu-toggle').click(function() {\r\n                $('.menu-toggle').toggleClass('active');\r\n                $('nav').toggleClass('active');\r\n            });\r\n        });\r\n    </script>\r\n</body>\r\n\r\n</html>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Commande, ICommande } from 'src/app/entities/commande/commande.model';\r\nimport { CommandeService } from 'src/app/entities/commande/commande.service';\r\nimport { IPlat,Plat } from 'src/app/entities/plat/plat.model';\r\nimport { PlatService } from 'src/app/entities/plat/plat.service';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-commande',\r\n  templateUrl: './commande.component.html',\r\n  styleUrls: ['./commande.component.css']\r\n})\r\nexport class CommandeComponent implements OnInit {\r\n  plats: Array<IPlat> = [];\r\n  idResto:string=\"\";\r\n  id_user:string='';\r\n  email:string='';\r\n  nom:string='';\r\n  error: boolean = false;\r\n  quantite = new FormControl(Validators.required);\r\n\r\n  @Output() createdCommande = new EventEmitter<ICommande>();\r\n  \r\n  constructor(private platserv:PlatService,private activatedRoute:ActivatedRoute, private user:UserService, private router:Router,private commandeserv:CommandeService) { }\r\n\r\n  ngOnInit(): void {\r\n    $('.menu-toggle').click(function(){\r\n      $('.menu-toggle').toggleClass('active');\r\n      $('nav').toggleClass('active');\r\n    });\r\n    let item= JSON.parse(localStorage.getItem(\"token_client\"));\r\n    if (!item) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      if (item[\"profil\"]!=\"client\") {\r\n        this.user.deconnexion(\"token_client\");\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.id_user=item[\"id_user\"];\r\n        this.email=item[\"email\"];\r\n        this.nom=item[\"nom\"];\r\n      }\r\n    }\r\n    this.loadAll();\r\n  }\r\n  onsubmit(plat:Plat){\r\n    const commande = new Commande(this.id_user,this.email, plat._id, plat.idResto, plat.nom , this.quantite.value,plat.prixVente, plat.prixRevient, false, null, null);\r\n    if(this.quantite.value>0){\r\n      if(confirm(\"Voulez vous vraiment commander \"+this.quantite.value+\" \"+plat.nom+\"?\")==true){\r\n        this.commandeserv.Commander(commande).then((result: ICommande) => {\r\n          if (result === undefined) {\r\n            this.error = true;\r\n          } else {\r\n            this.error = false;\r\n            this.createdCommande.emit(result);\r\n          }\r\n        });\r\n      }else{}\r\n    }\r\n  }\r\n  private loadAll() {\r\n    this.idResto=this.activatedRoute.snapshot.params[\"id\"];\r\n    this.platserv\r\n      .plat(this.idResto)\r\n      .then((result: Array<IPlat>) => {\r\n        this.plats = result;\r\n      });\r\n  }\r\n  deconnexion(){\r\n    this.user.deconnexion(\"token_client\");\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Commande</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"client\" class=\"logo\">Client</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a class=\"focus\" href=\"client\">Commander</a></li>\r\n                <li class=\"mid\"><a href=\"commande-en-cours\">Commande en cours</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <table class=\"content-table\">\r\n        <thead>\r\n          <tr>\r\n              <th>Nom</th>\r\n              <th>Prix</th>\r\n              <th>Quantite</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let plat of plats\">\r\n                <td>{{ plat.nom }}</td>\r\n                <td>{{ plat.prixVente }}</td>\r\n                <td><input id=\"quantite\" type=\"number\" [formControl]=\"quantite\" placeholder=0/></td>\r\n                <td><a (click)=\"onsubmit(plat)\">Commander</a></td>\r\n            </tr>\r\n        </tbody>\r\n        </table>\r\n    \r\n    <img class=\"footer\">\r\n    \r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n    <script type=\"text/javascript \">\r\n        $(document).ready(function($) {\r\n            $('.menu-toggle').click(function() {\r\n                $('.menu-toggle').toggleClass('active');\r\n                $('nav').toggleClass('active');\r\n            });\r\n        });\r\n    </script>\r\n</body>\r\n\r\n</html>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ICommande } from 'src/app/entities/commande/commande.model';\nimport { CommandeService } from 'src/app/entities/commande/commande.service';\nimport { UserService } from 'src/app/entities/user/user.service';\n\n@Component({\n  selector: 'app-livrer',\n  templateUrl: './livrer.component.html',\n  styleUrls: ['./livrer.component.css']\n})\nexport class LivrerComponent implements OnInit {\n  commandes: Array<ICommande> = [];\n  id_user:string='';\n  email:string='';\n  nom:string='';\n  error: boolean = false;\n  constructor(private activatedRoute:ActivatedRoute, private user:UserService, private router:Router,private commande : CommandeService) { }\n\n  ngOnInit(): void {\n    $('.menu-toggle').click(function(){\n      $('.menu-toggle').toggleClass('active');\n      $('nav').toggleClass('active');\n    });\n    let item= JSON.parse(localStorage.getItem(\"token_client\"));\n    if (!item) {\n      this.router.navigate(['/login']);\n    } else {\n      if (item[\"profil\"]!=\"client\") {\n        this.user.deconnexion(\"token_client\");\n        this.router.navigate(['/login']);\n      } else {\n        this.id_user=item[\"id_user\"];\n        this.email=item[\"email\"];\n        this.nom=item[\"nom\"];\n      }\n    }\n    this.loadAll();\n  }\n  private loadAll() {\n    this.commande\n      .CommandeClient(this.id_user)\n      .then((result: Array<ICommande>) => {\n        this.commandes = result;\n      });\n  }\n  deconnexion(){\n    this.user.deconnexion(\"token_client\");\n  }\n}\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Commande en cours</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"client\" class=\"logo\">Client</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a href=\"client\">Commander</a></li>\r\n                <li class=\"mid\"><a class=\"focus\" href=\"commande-en-cours\">Commande en cours</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <table class=\"content-table\">\r\n        <thead>\r\n          <tr>\r\n              <th>Plat</th>\r\n              <th>quantite</th>\r\n              <th>Prix</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let commande of commandes\">\r\n                <td>{{ commande.nom }}</td>\r\n                <td>{{ commande.quantite }}</td>\r\n                <td>{{ commande.prixUnitaire*commande.quantite }}</td>\r\n            </tr>\r\n        </tbody>\r\n        </table>\r\n    \r\n    <img class=\"footer\">\r\n    \r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n    <script type=\"text/javascript \">\r\n        $(document).ready(function($) {\r\n            $('.menu-toggle').click(function() {\r\n                $('.menu-toggle').toggleClass('active');\r\n                $('nav').toggleClass('active');\r\n            });\r\n        });\r\n    </script>\r\n</body>\r\n\r\n</html>","export interface ICommande {\r\n  _id?: string;\r\n  idClient : string;\r\n  Client : string;\r\n  idPlat : string;\r\n  idResto : string;\r\n  nom :string;\r\n  quantite : number;\r\n  prixUnitaire : number;\r\n  prixRevient : number;\r\n  livrer: boolean;\r\n  livreur: string;\r\n  date : Date;\r\n}\r\n\r\nexport class Commande implements ICommande {\r\n  constructor(\r\n    public idClient : string,\r\n    public Client : string,\r\n    public idPlat : string,\r\n    public idResto : string,\r\n    public nom :string,\r\n    public quantite : number,\r\n    public prixUnitaire : number,\r\n    public prixRevient : number,\r\n    public livrer: boolean,\r\n    public livreur: string,\r\n    public date : Date,\r\n    public _id?: string\r\n  ) {\r\n    this._id = _id ? _id : null;\r\n    this.idClient = idClient;\r\n    this.Client = Client;\r\n    this.idPlat = idPlat;\r\n    this.idResto = idResto;\r\n    this.nom = nom;\r\n    this.quantite =quantite;\r\n    this.prixUnitaire =prixUnitaire;\r\n    this.prixRevient =prixRevient;\r\n    this.livrer =livrer;\r\n    this.livreur =livreur;\r\n    this.date =date;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { ICommande, Commande } from './commande.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommandeService {\r\n  private CommandesUrl = '/api/commande';\r\n\r\n  constructor(private http: Http) { }\r\n  //get resto\r\n  commande(): Promise<Array<ICommande>> {\r\n    return this.http.get(`${this.CommandesUrl}/all`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n\r\n  //benefice par plat\r\n  benefice(id:string): Promise<Array<ICommande>> {\r\n    return this.http.get(`${this.CommandesUrl}/benefice/${id}`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n\r\n  //benefice par resto\r\n  beneficeResto(): Promise<Array<ICommande>> {\r\n    return this.http.get(`${this.CommandesUrl}/beneficeResto`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n\r\n  //Commander\r\n  Commander(commande: Commande): Promise<ICommande> {\r\n    return this.http.post(this.CommandesUrl, commande)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n  // Get Commandes by idClient\r\n  CommandeClient(id:string): Promise<Array<ICommande>> {\r\n    return this.http.get(`${this.CommandesUrl}/${id}`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n  // Get Commandes by Resto\r\n  CommandeResto(id:string): Promise<Array<ICommande>> {\r\n    return this.http.get(`api/restaurant/commande/${id}`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n  // Get Commandes a livrer\r\n  livraison(livreur:string): Promise<Array<ICommande>> {\r\n    return this.http.get(`${this.CommandesUrl}/livrer/${livreur}`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n\r\n  // Livrer\r\n  livrer(id:string): Promise<Array<ICommande>> {\r\n    return this.http.get(`api/livrer/${id}`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n\r\n  // Assigner livreur\r\n  assigner(id:string, livreur:string): Promise<Array<ICommande>> {\r\n    return this.http.get(`${this.CommandesUrl}/assigner/${id}/${livreur}`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n  }\r\n\r\n  private error(error: any) {\r\n      let message = (error.message) ? error.message :\r\n          error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n      console.error(message);\r\n  }\r\n}\r\n","export interface IPlat {\r\n  _id?: string;\r\n  image: string;\r\n  nom : string;\r\n  prixRevient : number;\r\n  prixVente : number;\r\n  visible : boolean;\r\n  idResto : string;\r\n}\r\n\r\nexport class Plat implements IPlat {\r\n  constructor(\r\n    public image: string,\r\n    public nom: string,\r\n    public prixRevient : number,\r\n    public prixVente : number,\r\n    public visible : boolean,\r\n    public idResto : string,\r\n    public _id?: string\r\n  ) {\r\n    this._id = _id ? _id : null;\r\n    this.image = image;\r\n    this.nom = nom;\r\n    this.prixRevient =prixRevient;\r\n    this.prixVente =prixVente;\r\n    this.visible = visible;\r\n    this.idResto = idResto;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { IPlat, Plat } from './plat.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlatService {\r\n  private PlatsUrl = '/api/plat';\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  // Get Plats by idResto\r\n  plat(id:string): Promise<Array<IPlat>> {\r\n      return this.http.get(`${this.PlatsUrl}/${id}`)\r\n          .toPromise()\r\n          .then(response => response.json())\r\n          .catch(this.error);\r\n  }\r\n\r\n  // Create Plat\r\n  create(Plat: Plat): Promise<IPlat> {\r\n      return this.http.post(this.PlatsUrl, Plat)\r\n          .toPromise()\r\n          .then(response => response.json())\r\n          .catch(this.error);\r\n  }\r\n\r\n  // Delete a Plat\r\n  delete(id: string): Promise<any> {\r\n      return this.http.delete(`${this.PlatsUrl}/${id}`)\r\n          .toPromise()\r\n          .then(response => response.json())\r\n          .catch(this.error);\r\n  }\r\n\r\n  //send Mail\r\n  sendMail(Plat: Plat): Promise<IPlat> {\r\n      return this.http.post(`${this.PlatsUrl}/sendmail`, Plat)\r\n          .toPromise()\r\n          .then(response => response.json())\r\n          .catch(this.error);\r\n  }\r\n\r\n  // Error handling\r\n  private error(error: any) {\r\n      let message = (error.message) ? error.message :\r\n          error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n      console.error(message);\r\n  }\r\n}\r\n","export interface IProduct {\n  _id?: string;\n  name: string;\n  brand: string;\n}\n\nexport class Product implements IProduct {\n  constructor(\n    public name: string,\n    public brand: string,\n    public _id?: string\n  ) {\n    this._id = _id ? _id : null;\n    this.name = name;\n    this.brand = brand;\n  }\n}","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { IProduct, Product } from './product.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProductService {\n    private productsUrl = '/api/products';\n\n    constructor(private http: Http) { }\n\n    // Get products\n    get(): Promise<Array<IProduct>> {\n        return this.http.get(this.productsUrl)\n            .toPromise()\n            .then(response => response.json())\n            .catch(this.error);\n    }\n\n    // Create product\n    create(product: Product): Promise<IProduct> {\n        return this.http.post(this.productsUrl, product)\n            .toPromise()\n            .then(response => response.json())\n            .catch(this.error);\n    }\n\n    // Delete a product\n    delete(id: string): Promise<any> {\n        return this.http.delete(`${this.productsUrl}/${id}`)\n            .toPromise()\n            .then(response => response.json())\n            .catch(this.error);\n    }\n\n    // Error handling\n    private error(error: any) {\n        let message = (error.message) ? error.message :\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        console.error(message);\n    }\n}\n","export interface IUser {\r\n  _id?: string;\r\n  email: string;\r\n  nom : string;\r\n  adresse:string;\r\n  valide : boolean;\r\n  profil : string;\r\n  mdp : string;\r\n}\r\n\r\nexport class User implements IUser {\r\n  constructor(\r\n    public email: string,\r\n    public nom: string,\r\n    public adresse:string,\r\n    public valide : boolean,\r\n    public profil : string,\r\n    public mdp : string,\r\n    public _id?: string\r\n  ) {\r\n    this._id = _id ? _id : null;\r\n    this.email = email;\r\n    this.nom = nom;\r\n    this.adresse = adresse;\r\n    this.valide =valide;\r\n    this.profil =profil;\r\n    this.mdp = mdp;\r\n  }\r\n}\r\n\r\nexport interface LUser {\r\n  email: string;\r\n  mdp : string;\r\n}\r\n\r\nexport class LoginUser implements LUser {\r\n  constructor(\r\n    public email: string,\r\n    public mdp : string,\r\n  ) {\r\n    this.email = email;\r\n    this.mdp = mdp;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { IUser, LoginUser, User } from './user.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n    private UsersUrl = '/api/user';\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    // Get Users\r\n    get(): Promise<Array<IUser>> {\r\n        return this.http.get(this.UsersUrl)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    //get resto\r\n    resto(): Promise<Array<IUser>> {\r\n        return this.http.get(`${this.UsersUrl}/resto`)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    //get livreur\r\n    livreur(): Promise<Array<IUser>> {\r\n        return this.http.get(`${this.UsersUrl}/livreur`)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    // Create User\r\n    create(User: User): Promise<IUser> {\r\n        return this.http.post(this.UsersUrl, User)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    // Login\r\n    login(User: LoginUser): Promise<any> {\r\n        return this.http.post(`${this.UsersUrl}/login`, User)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    // Logout\r\n    delete_token(id: string): Promise<any>  {\r\n        return this.http.delete(`${this.UsersUrl}/token/${id}`)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(this.error);\r\n    }\r\n    deconnexion(token: string) {\r\n        let item= JSON.parse(localStorage.getItem(token));\r\n        let id_user=item[\"id_user\"];\r\n        this.delete_token(id_user);\r\n        localStorage.removeItem(token);\r\n        window.location.reload();\r\n    }\r\n\r\n    // Delete a User\r\n    delete(id: string): Promise<any> {\r\n        return this.http.delete(`${this.UsersUrl}/${id}`)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    //send Mail\r\n    validercompte(email: string): Promise<any> {\r\n        return this.http.get(`${this.UsersUrl}/valider/${email}`)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n    //mail existant\r\n    mail(email: string): Promise<IUser> {\r\n        return this.http.get(`${this.UsersUrl}/${email}`)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    //Resto by id\r\n    restoById(id: string): Promise<IUser> {\r\n        return this.http.get(`${this.UsersUrl}/resto/${id}`)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    //send Mail\r\n    sendMail(User: User): Promise<IUser> {\r\n        return this.http.post(`${this.UsersUrl}/sendmail`, User)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.error);\r\n    }\r\n\r\n    // Error handling\r\n    private error(error: any) {\r\n        let message = (error.message) ? error.message :\r\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n        console.error(message);\r\n    }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\nimport { IUser, User } from 'src/app/entities/user/user.model';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-inscription',\r\n  templateUrl: './inscription.component.html',\r\n  styleUrls: ['./inscription.component.css']\r\n})\r\nexport class InscriptionComponent implements OnInit {\r\n\r\n  mail:IUser;\r\n    succes:boolean=false;\r\n    erreur:boolean=false;\r\n  UserForm: FormGroup;\r\n  email: string = '';\r\n  nom: string = '';\r\n  adresse: string = '';\r\n  valide: boolean = false;\r\n  profil: string = 'client';\r\n  mdp : string = '';\r\n  cmdp : string = '';\r\n  error: boolean = false;\r\n\r\n  @Output() createdUser = new EventEmitter<IUser>();\r\n\r\n  constructor(protected UserService: UserService, protected formBuilder: FormBuilder, private router: Router) { }\r\n\r\n  // Init the form when starting the view.\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  // Manage the submit action and create the new User.\r\n  onSubmit() {\r\n    const user = new User(this.UserForm.value['email'], this.UserForm.value['nom'], this.UserForm.value['adresse'],this.UserForm.value['valide'], this.UserForm.value['profil'], this.UserForm.value['mdp'], null);\r\n    if (this.UserForm.value['mdp']==this.UserForm.value['cmdp']) {\r\n      this.succes=false;\r\n      this.erreur=false;\r\n       this.UserService.mail(this.UserForm.value['email']).then((result: IUser) => {\r\n        this.mail = result;\r\n      });\r\n        if(!this.mail){\r\n          this.UserService.create(user).then((result: IUser) => {\r\n            if (result === undefined) {\r\n              this.error = true;\r\n            } else {\r\n              this.error = false;\r\n              this.createdUser.emit(result);\r\n            }\r\n          });\r\n          this.UserService.sendMail(user).then((result: IUser) => {\r\n            if (result === undefined) {\r\n              this.error = true;\r\n            } else {\r\n              this.error = false;\r\n              this.createdUser.emit(result);\r\n            }\r\n          });\r\n          this.succes=true;\r\n        } else {\r\n          this.erreur=true;\r\n        }\r\n    }\r\n  }\r\n\r\n  // Hide the error message.\r\n  hideError() {\r\n    this.error = false;\r\n  }\r\n\r\n  // Init the creation form.\r\n  private initForm() {\r\n    this.UserForm = new FormGroup({\r\n      nom: new FormControl(this.nom, Validators.required),\r\n      email: new FormControl(this.email, Validators.required),\r\n      adresse: new FormControl(this.adresse, Validators.required),\r\n      valide: new FormControl(this.valide, Validators.required),\r\n      profil: new FormControl(this.profil, Validators.required),\r\n      mdp: new FormControl(this.mdp, Validators.required),\r\n      cmdp: new FormControl(this.cmdp, Validators.required)\r\n    });\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Inscription</title>\r\n</head>\r\n\r\n<body class=\"size-1140\">\r\n    <header>\r\n        <a href=\"#\" class=\"logo\">Inscription</a>\r\n        <div class=\"rs\">\r\n\r\n        </div>\r\n    </header>\r\n    <section>\r\n        <div class=\"lien\">\r\n            <a href=\"login\">Connexion</a>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"inscription\">\r\n                <h2>Inscription</h2>\r\n                <p style=\"color: red\"></p>\r\n                <br>\r\n                <div *ngIf=\"succes\" class=\"alert alert-success\" role=\"alert\">\r\n                    Un message de confirmation a ete envoye sur votre email\r\n                </div>\r\n                <div *ngIf=\"erreur\" class=\"alert alert-danger\" role=\"alert\">\r\n                    Ce compte existe deja\r\n                </div>\r\n                <form class=\"customform\" [formGroup]=\"UserForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <label>Email</label>\r\n                    <input formControlName=\"email\" id=\"email\" type=\"email\" />\r\n                    <label>Nom</label>\r\n                    <input formControlName=\"nom\" id=\"nom\" type=\"text\" />\r\n                    <label>Adresse</label>\r\n                    <input formControlName=\"adresse\" id=\"adresse\" type=\"text\" />\r\n                    <label>Mot de passe</label>\r\n                    <input formControlName=\"mdp\" id=\"mdp\" type=\"password\" />\r\n                    <label>Confirmer mot de passe</label>\r\n                    <input formControlName=\"cmdp\" id=\"cmdp\" type=\"password\" />\r\n                    <button type=\"submit\" [disabled]=\"!UserForm.valid\">Valider</button>\r\n                </form>\r\n                <br>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <img class=\"footer\">\r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n</body>\r\n\r\n</html>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Commande, ICommande } from '../entities/commande/commande.model';\r\nimport { CommandeService } from '../entities/commande/commande.service';\r\nimport { UserService } from '../entities/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-livreur',\r\n  templateUrl: './livreur.component.html',\r\n  styleUrls: ['./livreur.component.css']\r\n})\r\nexport class LivreurComponent implements OnInit {\r\n  commandes: Array<ICommande> = [];\r\n  idResto:string=\"\";\r\n  id_user:string='';\r\n  email:string='';\r\n  nom:string='';\r\n  error: boolean = false;\r\n  quantite = new FormControl(Validators.required);\r\n\r\n  \r\n  constructor(private activatedRoute:ActivatedRoute, private user:UserService, private router:Router,private commandeserv:CommandeService) { }\r\n\r\n  ngOnInit(): void {\r\n    $('.menu-toggle').click(function(){\r\n      $('.menu-toggle').toggleClass('active');\r\n      $('nav').toggleClass('active');\r\n    });\r\n    let item= JSON.parse(localStorage.getItem(\"token_livreur\"));\r\n    if (!item) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      if (item[\"profil\"]!=\"livreur\") {\r\n        this.user.deconnexion(\"token_livreur\");\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.id_user=item[\"id_user\"];\r\n        this.email=item[\"email\"];\r\n        this.nom=item[\"nom\"];\r\n      }\r\n    }\r\n    this.loadAll();\r\n  }\r\n  onsubmit(commande: Commande){\r\n    if(confirm(\"Livrer cette commande?\")==true){\r\n      this.commandeserv.livrer(commande._id);\r\n    }else{}\r\n  }\r\n  private loadAll() {\r\n    this.idResto=this.activatedRoute.snapshot.params[\"id\"];\r\n    this.commandeserv\r\n      .livraison(this.id_user)\r\n      .then((result: Array<ICommande>) => {\r\n        this.commandes = result;\r\n      });\r\n  }\r\n  deconnexion(){\r\n    this.user.deconnexion(\"token_livreur\");\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Livreur</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"livreur\" class=\"logo\">Livreur</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a class=\"focus\" href=\"livreur\">Livraison</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <table class=\"content-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Plat</th>\r\n            <th>quantite</th>\r\n            <th>Prix</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let commande of commandes\">\r\n                <td>{{ commande.nom }}</td>\r\n                <td>{{ commande.quantite }}</td>\r\n                <td>{{ commande.prixUnitaire*commande.quantite }}</td>\r\n                <td><a (click)=\"onsubmit(commande)\">Livrer</a></td>\r\n            </tr>\r\n        </tbody>\r\n        </table>\r\n    \r\n    <img class=\"footer\">\r\n    \r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n</body>\r\n\r\n</html>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\nimport { LoginUser, LUser } from '../entities/user/user.model';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  UserForm: FormGroup;\r\n  email: string = '';\r\n    mdp: string = '';\r\n    message=\"\";\r\n    user=[] as any;\r\n    error: boolean = false;\r\n  erreur:boolean=false;\r\n    \r\n  constructor(protected UserService: UserService, protected activatedRoute:ActivatedRoute,protected router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    let mail=this.activatedRoute.snapshot.params[\"email\"];\r\n    if(mail!=null){\r\n      this.UserService.validercompte(mail);\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n  onSubmit(){\r\n    const user =new LoginUser(this.UserForm.value['email'],this.UserForm.value['mdp']);\r\n  //  console.log(this.email);\r\n   // console.log(user);\r\n    this.UserService.login(user).then((result: LUser) => {\r\n      if (result === undefined) {\r\n          this.erreur=false;\r\n          this.error = true;\r\n          this.erreur=true;\r\n\r\n      } else {\r\n        this.error = false;\r\n        \r\n        if(result[\"status\"]==\"NON\"){\r\n          this.erreur=false;\r\n\r\n          console.log(\"NONONON\");\r\n          this.message=result[\"message\"];\r\n          this.erreur=true;\r\n\r\n        }\r\n        else if(result[\"status\"]==\"OK\"){\r\n          console.log(\"YES\");\r\n          this.message=result[\"message\"];\r\n          console.log(result);\r\n         \r\n          if(result[\"profil\"]==\"client\")\r\n          {\r\n            localStorage.setItem(\"token_client\",JSON.stringify(result));\r\n           let item = JSON.parse(localStorage.getItem(\"token_client\"));\r\n            this.router.navigateByUrl(\"/client\");\r\n          }\r\n          if(result[\"profil\"]==\"resto\")\r\n          {\r\n            localStorage.setItem(\"token_resto\",JSON.stringify(result));\r\n            let item = JSON.parse(localStorage.getItem(\"token_resto\"));\r\n            this.router.navigateByUrl(\"/restaurant\");\r\n          }\r\n          if(result[\"profil\"]==\"admin\")\r\n          {\r\n            localStorage.setItem(\"token_admin\",JSON.stringify(result));\r\n            let item = JSON.parse(localStorage.getItem(\"token_admin\"));\r\n            this.router.navigateByUrl(\"/admin\");\r\n          }\r\n\r\n          if(result[\"profil\"]==\"livreur\")\r\n          {\r\n            localStorage.setItem(\"token_livreur\",JSON.stringify(result));\r\n           let item = JSON.parse(localStorage.getItem(\"token_livreur\"));\r\n            this.router.navigateByUrl(\"/livreur\");\r\n          }\r\n         \r\n          //console.log(\"ITO\"+item[\"token\"]);\r\n\r\n        }\r\n        \r\n         // this.createdUser.emit(result);\r\n          //this.refresh();\r\n       \r\n      }\r\n    });\r\n     \r\n  }\r\n  private initForm() {\r\n    this.UserForm = new FormGroup({\r\n      email: new FormControl(this.email, Validators.required),\r\n      mdp: new FormControl(this.mdp, Validators.required)\r\n    });\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Connexion</title>\r\n</head>\r\n\r\n<body>\r\n    <header>\r\n        <a href=\"#\" class=\"logo\">Login</a>\r\n        <div class=\"rs\">\r\n\r\n        </div>\r\n    </header>\r\n    <section>\r\n        <div class=\"lien\">\r\n\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"connexion\">\r\n                <img src=\"\">\r\n                <p>Connexion</p>\r\n                <p style=\"color: red\"></p>\r\n                <br>\r\n                <div *ngIf=\"erreur\" class=\"alert alert-danger\" role=\"alert\">\r\n                    Email ou mot de passe incorrect\r\n                </div>\r\n                <form class=\"customform\" [formGroup]=\"UserForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <label>E-mail</label>\r\n                    <input formControlName=\"email\" id=\"email\" type=\"text \" />\r\n                    <label>Mot de passe</label>\r\n                    <input formControlName=\"mdp\" id=\"mdp\" type=\"password\" />\r\n                    <button type=\"submit\" [disabled]=\"!UserForm.valid\">Valider</button>\r\n                </form>\r\n                <div class=\"s-12 l-7 \">\r\n                    <a href=\"inscription \">\r\n                        <h2>ou inscrivez vous!</h2>\r\n                    </a>\r\n                </div>\r\n                <br>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <img class=\"footer \">\r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n</body>\r\n\r\n</html>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ProductService } from 'src/app/entities/product/product.service';\nimport { IProduct, Product } from 'src/app/entities/product/product.model';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent implements OnInit {\n\n  productForm: FormGroup;\n  name: string = '';\n  brand: string = '';\n  error: boolean = false;\n\n  @Output() createdProduct = new EventEmitter<IProduct>();\n\n  constructor(protected productService: ProductService, protected formBuilder: FormBuilder) { }\n\n  // Init the form when starting the view.\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  // Manage the submit action and create the new product.\n  onSubmit() {\n    const product = new Product(this.productForm.value['name'], this.productForm.value['brand'], null);\n    this.productService.create(product).then((result: IProduct) => {\n      if (result === undefined) {\n        this.error = true;\n      } else {\n        this.error = false;\n        this.createdProduct.emit(result);\n      }\n    });\n  }\n\n  // Hide the error message.\n  hideError() {\n    this.error = false;\n  }\n\n  // Init the creation form.\n  private initForm() {\n    this.productForm = new FormGroup({\n      name: new FormControl(this.name, Validators.required),\n      brand: new FormControl(this.brand, Validators.required)\n    });\n  }\n\n}\n","<h4>Create a product:</h4>\n<div *ngIf=\"error\">\n    <hr>\n    <div class=\"alert alert-danger alert-dismissible\" role=\"alert\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span\n                aria-hidden=\"true\" (click)=\"hideError()\">&times;</span></button>\n        <strong>Warning!</strong> Error creating product.\n    </div>\n    <hr>\n</div>\n<form class=\"form-horizontal\" [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"name\" class=\"col-sm-2 control-label\">Name</label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"brand\" class=\"col-sm-2 control-label\">Brand</label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" id=\"brand\" formControlName=\"brand\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"col-sm-offset-2 col-sm-10\">\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!productForm.valid\">Create</button>\n        </div>\n    </div>\n</form>","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { ProductService } from 'src/app/entities/product/product.service';\nimport { IProduct } from 'src/app/entities/product/product.model';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit, OnChanges {\n\n  products: Array<IProduct> = [];\n  @Input() productToDisplay: IProduct = null;\n\n  constructor(protected productService: ProductService) { }\n\n  // Load all the products when starting the view.\n  ngOnInit(): void {\n    this.loadAll();\n  }\n\n  // If new product created, we add it to the list.\n  ngOnChanges(): void {\n    if (this.productToDisplay !== null) {\n      this.products.push(this.productToDisplay);\n    }\n  }\n\n  // Delete a product. \n  delete(id: string) {\n    this.productService.delete(id).then((result: any) => this.loadAll());\n  }\n\n  // Load all products.\n  private loadAll() {\n    this.productService\n      .get()\n      .then((result: Array<IProduct>) => {\n        this.products = result;\n      });\n  }\n\n}\n","<h4>Products:</h4>\r\n\r\n<table *ngIf=\"products.length > 0\" class=\"table\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Brand</th>\r\n            <th scope=\"col\">Actions</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let product of products\">\r\n            <td>{{ product.name }}</td>\r\n            <td>{{ product.brand }}</td>\r\n            <td> <a class=\"delete\" (click)=\"delete(product._id)\">Delete</a> </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<div *ngIf=\"products.length === 0\" class=\"alert alert-info\" role=\"info\">\r\n    <span class=\"glyphicon glyphicon-exclamation-sign\" aria-hidden=\"true\"></span>\r\n    <span class=\"sr-only\">Information:</span> The product collection is empty.\r\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Commande, ICommande } from 'src/app/entities/commande/commande.model';\r\nimport { CommandeService } from 'src/app/entities/commande/commande.service';\r\nimport { IPlat,Plat } from 'src/app/entities/plat/plat.model';\r\nimport { PlatService } from 'src/app/entities/plat/plat.service';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-benefice',\r\n  templateUrl: './benefice.component.html',\r\n  styleUrls: ['./benefice.component.css']\r\n})\r\nexport class BeneficeComponent implements OnInit {\r\n\r\n  commandes: Array<ICommande> = [];\r\n  idResto:string=\"\";\r\n  id_user:string='';\r\n  email:string='';\r\n  nom:string='';\r\n  error: boolean = false;\r\n  quantite = new FormControl(Validators.required);\r\n\r\n  @Output() createdCommande = new EventEmitter<ICommande>();\r\n  \r\n  constructor(private platserv:PlatService,private activatedRoute:ActivatedRoute, private user:UserService, private router:Router,private commandeserv:CommandeService) { }\r\n\r\n  ngOnInit(): void {\r\n    $('.menu-toggle').click(function(){\r\n      $('.menu-toggle').toggleClass('active');\r\n      $('nav').toggleClass('active');\r\n    });\r\n    let item= JSON.parse(localStorage.getItem(\"token_resto\"));\r\n    if (!item) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      if (item[\"profil\"]!=\"resto\") {\r\n        this.user.deconnexion(\"token_resto\");\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.id_user=item[\"id_user\"];\r\n        this.email=item[\"email\"];\r\n        this.nom=item[\"nom\"];\r\n      }\r\n    }\r\n    this.loadAll();\r\n  }\r\n  onsubmit(plat:Plat){\r\n    \r\n  }\r\n  private loadAll() {\r\n    this.commandeserv\r\n      .benefice(this.id_user)\r\n      .then((result: Array<ICommande>) => {\r\n        this.commandes = result;\r\n      });\r\n  }\r\n  deconnexion(){\r\n    this.user.deconnexion(\"token_resto\");\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Livreur</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"livreur\" class=\"logo\">Restaurant</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a href=\"restaurant\">Plats</a></li>\r\n                <li class=\"mid\"><a href=\"plat/nouveau\">Nouveaux-plats</a></li>\r\n                <li class=\"mid\"><a href=\"restaurant/commande\">Commande</a></li>\r\n                <li class=\"mid\"><a class=\"focus\" href=\"restaurant/benefice\">Benefices</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <table class=\"content-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Plat</th>\r\n            <th>Quantite vendu</th>\r\n            <th>Benefice</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let commande of commandes\">\r\n                <td>{{ commande._id }}</td>\r\n                <td>{{ commande.quantite}}</td>\r\n                <td>{{ (commande.quantite*commande.totalPrix)-(commande.quantite*commande.totalRevient)}}</td>\r\n            </tr>\r\n        </tbody>\r\n        </table>\r\n    \r\n    <img class=\"footer\">\r\n    \r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n</body>\r\n\r\n</html>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as $ from 'jquery';\nimport { Commande, ICommande } from 'src/app/entities/commande/commande.model';\nimport { CommandeService } from 'src/app/entities/commande/commande.service';\nimport { UserService } from 'src/app/entities/user/user.service';\n\n@Component({\n  selector: 'app-commande',\n  templateUrl: './commande.component.html',\n  styleUrls: ['./commande.component.css']\n})\nexport class CommandeRestaurantComponent implements OnInit {\n  commandes: Array<ICommande> = [];\n  idResto:string=\"\";\n  id_user:string='';\n  email:string='';\n  constructor( protected formBuilder: FormBuilder,private activatedRoute:ActivatedRoute, private router: Router, private user:UserService, private commandeserv:CommandeService) { }\n\n  ngOnInit(): void {\n    $('.menu-toggle').click(function(){\n      $('.menu-toggle').toggleClass('active');\n      $('nav').toggleClass('active');\n    });\n    let item= JSON.parse(localStorage.getItem(\"token_resto\"));\n    if (!item) {\n      this.router.navigate(['/login']);\n    } else {\n      if (item[\"profil\"]!=\"resto\") {\n        this.user.deconnexion(\"token_resto\");\n        this.router.navigate(['/login']);\n      } else {\n        this.id_user=item[\"id_user\"];\n        this.email=item[\"email\"];\n      }\n    }\n    this.loadAll();\n  }\n  onsubmit(commande:Commande){\n\n  }\n  private loadAll() {\n    this.commandeserv\n      .CommandeResto(this.id_user)\n      .then((result: Array<ICommande>) => {\n        this.commandes = result;\n      });\n  }\n  deconnexion(){\n    this.user.deconnexion(\"token_resto\");\n  }\n}\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Livreur</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"livreur\" class=\"logo\">Restaurant</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a href=\"restaurant\">Plats</a></li>\r\n                <li class=\"mid\"><a href=\"plat/nouveau\">Nouveaux-plats</a></li>\r\n                <li class=\"mid\"><a class=\"focus\" href=\"restaurant/commande\">Commande</a></li>\r\n                <li class=\"mid\"><a href=\"restaurant/benefice\">Benefices</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <table class=\"content-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Plat</th>\r\n            <th>quantite</th>\r\n            <th>Prix</th>\r\n            <th>Client</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let commande of commandes\">\r\n                <td>{{ commande.nom }}</td>\r\n                <td>{{ commande.quantite }}</td>\r\n                <td>{{ commande.prixUnitaire*commande.quantite }}</td>\r\n                <td>{{ commande.Client }}</td>\r\n            </tr>\r\n        </tbody>\r\n        </table>\r\n    \r\n    <img class=\"footer\">\r\n    \r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n</body>\r\n\r\n</html>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport * as $ from 'jquery';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-restaurant',\r\n  templateUrl: './restaurant.component.html',\r\n  styleUrls: ['./restaurant.component.css']\r\n})\r\nexport class RestaurantComponent implements OnInit {\r\n  id_user:string='';\r\n  email:string='';\r\n  nom:string='';\r\n  constructor(private router:Router,private user:UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    $('.menu-toggle').click(function(){\r\n      $('.menu-toggle').toggleClass('active');\r\n      $('nav').toggleClass('active');\r\n    });\r\n    let item= JSON.parse(localStorage.getItem(\"token_resto\"));\r\n    if (!item) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      if (item[\"profil\"]!=\"resto\") {\r\n        this.user.deconnexion(\"token_resto\");\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.id_user=item[\"id_User\"];\r\n        this.email=item[\"email\"];\r\n        this.nom=item[\"nom\"];\r\n      }\r\n    }\r\n  }\r\n  deconnexion(){\r\n    this.user.deconnexion(\"token_resto\");\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Agence de communication Minucia Madagascar</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body>\r\n    <!-- HEADER -->\r\n    <header>\r\n        <a href=\"restaurant\" class=\"logo\">Restaurant</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a class=\"focus\" href=\"restaurant\">Plats</a></li>\r\n                <li class=\"mid\"><a href=\"plat/nouveau\">Nouveaux-plats</a></li>\r\n                <li class=\"mid\"><a href=\"restaurant/commande\">Commande</a></li>\r\n                <li class=\"mid\"><a href=\"restaurant/benefice\">Benefices</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- BODY -->\r\n    <div class=\"titre\">\r\n        <img class=\"header\" alt=\"header\" src=\"assets/pictogrammes/elements/resto.webp\">\r\n        <h1 class=\"titre1\">E-kaly</h1>\r\n        <h1 class=\"we_care\">Satisfait ou rembourser</h1>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <div class=\"half clearfix\">\r\n        <div class=\"div\">\r\n            <div class=\"plat\">\r\n                <img class=\"header\" alt=\"header\" src=\"assets/pictogrammes/elements/resto.webp\">\r\n            </div>\r\n            <button>visible</button>\r\n            <button>Supprimer</button>\r\n        </div>\r\n        <div class=\"div\">\r\n            <div class=\"plat\">\r\n\r\n            </div>\r\n            <button>visible</button>\r\n            <button>Supprimer</button>\r\n        </div>\r\n        <div class=\"div\">\r\n            <div class=\"plat\">\r\n\r\n            </div>\r\n            <button>visible</button>\r\n            <button>Supprimer</button>\r\n        </div>\r\n        <div class=\"div\">\r\n            <div class=\"plat\">\r\n\r\n            </div>\r\n            <button>visible</button>\r\n            <button>Supprimer</button>\r\n        </div>\r\n    </div>\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n\r\n    <script type=\"text/javascript\">\r\n        /*window.addEventListener(\"scroll\",function(){  \r\n                                                                                \t\t\tvar header=document.querySelector(\"header\");\r\n                                                                                \t\t\theader.classList.toggle(\"stick\", window.scrollY > 0);\r\n                                                                                \t\t});*/\r\n        $(document).ready(function($) {\r\n            $('.menu-toggle').click(function() {\r\n                $('.menu-toggle').toggleClass('active');\r\n                $('nav').toggleClass('active');\r\n            });\r\n        });\r\n    </script>\r\n</body>\r\n\r\n</html>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {Router} from \"@angular/router\";\r\nimport * as $ from 'jquery';\r\nimport { IPlat,Plat } from 'src/app/entities/plat/plat.model';\r\nimport { PlatService } from 'src/app/entities/plat/plat.service';\r\nimport { UserService } from 'src/app/entities/user/user.service';\r\n@Component({\r\n  selector: 'app-new-plat',\r\n  templateUrl: './new-plat.component.html',\r\n  styleUrls: ['./new-plat.component.css']\r\n})\r\nexport class NewPlatComponent implements OnInit {\r\n  id_user:string='';\r\n  email:string='';\r\n  PlatForm: FormGroup;\r\n  nom : string= '';\r\n  prixVente : string= '';\r\n  prixRevient : string= '';\r\n  visible : string= '';\r\n  error: boolean = false;\r\n\r\n  @Output() createdPlat = new EventEmitter<IPlat>();\r\n\r\n  constructor(protected PlatService: PlatService, protected formBuilder: FormBuilder, private router: Router, private user:UserService) { }\r\n\r\n  // Init the form when starting the view.\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    $('.menu-toggle').click(function(){\r\n      $('.menu-toggle').toggleClass('active');\r\n      $('nav').toggleClass('active');\r\n    });\r\n    let item= JSON.parse(localStorage.getItem(\"token_resto\"));\r\n    if (!item) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      if (item[\"profil\"]!=\"resto\") {\r\n        this.user.deconnexion(\"token_resto\");\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.id_user=item[\"id_user\"];\r\n        this.email=item[\"email\"];\r\n      }\r\n    }\r\n  }\r\n\r\n  // Manage the submit action and create the new Plat.\r\n  onSubmit() {\r\n    if(this.PlatForm.value['visible']==\"true\"){\r\n    const plat = new Plat(null,this.PlatForm.value['nom'], this.PlatForm.value['prixRevient'],this.PlatForm.value['prixVente'], true, this.id_user, null);\r\n      this.PlatService.create(plat).then((result: IPlat) => {\r\n        if (result === undefined) {\r\n          this.error = true;\r\n        } else {\r\n          this.error = false;\r\n          this.createdPlat.emit(result);\r\n        }\r\n      });\r\n    }else{\r\n      const plat = new Plat(null,this.PlatForm.value['nom'], this.PlatForm.value['prixRevient'],this.PlatForm.value['prixVente'], false, this.id_user, null);\r\n        this.PlatService.create(plat).then((result: IPlat) => {\r\n          if (result === undefined) {\r\n            this.error = true;\r\n          } else {\r\n            this.error = false;\r\n            this.createdPlat.emit(result);\r\n          }\r\n        });\r\n      }\r\n    this.router.navigate(['/restaurant']);\r\n    \r\n  }\r\n\r\n  // Hide the error message.\r\n  hideError() {\r\n    this.error = false;\r\n  }\r\n\r\n  deconnexion(){\r\n    this.user.deconnexion(\"token_resto\");\r\n  }\r\n  // Init the creation form.\r\n  private initForm() {\r\n    this.PlatForm = new FormGroup({\r\n      nom: new FormControl(this.nom, Validators.required),\r\n      prixRevient: new FormControl(this.prixRevient, Validators.required),\r\n      prixVente: new FormControl(this.prixVente, Validators.required),\r\n      visible: new FormControl(this.visible, Validators.required)\r\n    });\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en-US\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Nouveau plat</title>\r\n    <meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\r\n    <meta name=\"author\" content=\"Hajanirivo Sitraka\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n</head>\r\n\r\n<body class=\"size-1140\">\r\n    <header>\r\n        <a href=\"restaurant\" class=\"logo\">Restaurant</a>\r\n        <div class=\"menu-toggle\"></div>\r\n        <nav>\r\n            <ul>\r\n                <li><a href=\"restaurant\">Plats</a></li>\r\n                <li class=\"mid\"><a class=\"focus\" href=\"plat/nouveau\">Nouveaux-plats</a></li>\r\n                <li class=\"mid\"><a href=\"restaurant/commande\">Commande</a></li>\r\n                <li class=\"mid\"><a href=\"restaurant/benefice\">Benefices</a></li>\r\n                <li class=\"mid\"><a (click)=\"deconnexion()\">Deconnexion</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div class=\"clearfix\"></div>\r\n    </header>\r\n    <section>\r\n        <div class=\"lien\">\r\n\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form\">\r\n                <p style=\"color: red\"></p>\r\n                <br>\r\n                <form class=\"customform\" [formGroup]=\"PlatForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <label>nom</label>\r\n                    <input formControlName=\"nom\" id=\"nom\" type=\"text\" />\r\n                    <label>prix revient</label>\r\n                    <input formControlName=\"prixRevient\" id=\"prixRevient\" type=\"number\" />\r\n                    <label>prix vente</label>\r\n                    <input formControlName=\"prixVente\" id=\"prixVente\" type=\"number\" />\r\n                    <label>visible sur le site e-kaly</label>\r\n                    <select formControlName=\"visible\">\r\n                      <option value=\"true\">Visible</option>\r\n                      <option value=\"false\">Non visible</option>\r\n                    </select>\r\n                    <button type=\"submit\" [disabled]=\"!PlatForm.valid\">Valider</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <img class=\"footer\" src=\"\">\r\n\r\n\r\n    <footer>\r\n        <p>Copyright 2022 &copy; Hajanirivo Sitraka</p>\r\n    </footer>\r\n</body>\r\n<script type=\"text/javascript\">\r\n    /*window.addEventListener(\"scroll\",function(){  \r\n                                                                                        var header=document.querySelector(\"header\");\r\n                                                                                        header.classList.toggle(\"stick\", window.scrollY > 0);\r\n                                                                                    });*/\r\n    $(document).ready(function($) {\r\n        $('.menu-toggle').click(function() {\r\n            $('.menu-toggle').toggleClass('active');\r\n            $('nav').toggleClass('active');\r\n        });\r\n    });\r\n</script>\r\n</html>","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatusService {\n  private statusUrl = '/api/status';\n\n  constructor(private http: Http) { }\n\n  // Get the status\n  getStatus(): Promise<void | any> {\n    return this.http.get(this.statusUrl)\n               .toPromise()\n               .then(response => response.json())\n               .catch(this.error);\n  }\n\n  // Error handling\n  private error (error: any) {\n    let message = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.error(message);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}